==================================================
Graphics and 2D Games programming using RingLibSDL
==================================================

In this chapter we will learn about using RingLibSDL to create games based on the
LibSDL, SDLImage, SDLTTF and SDLMixer libraries.

Create Window
=============

Example:

.. code-block:: none

	Load "libsdl.ring"

	sdl_init(SDL_INIT_EVERYTHING)
	win = SDL_CreateWindow("Hello World!", 100, 100, 640, 480, SDL_WINDOW_SHOWN)
	SDL_Delay(2000)
	SDL_DestroyWindow(win)
	SDL_Quit()

Display Image
=============

Example:

.. code-block:: none

	Load "libsdl.ring"

	sdl_init(SDL_INIT_EVERYTHING)
	win = SDL_CreateWindow("Hello World!", 100, 100, 640, 480, SDL_WINDOW_SHOWN)
	ren = SDL_CreateRenderer(win, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC )
	bmp = SDL_LoadBMP("hello.bmp")
	tex = SDL_CreateTextureFromSurface(ren,bmp)
	SDL_FreeSurface(bmp)
	SDL_RenderClear(ren)
	SDL_RenderCopy2(ren,tex)
	SDL_RenderPresent(ren)
	SDL_Delay(2000)
	SDL_DestroyTexture(tex)
	SDL_DestroyRenderer(ren)
	SDL_DestroyWindow(win)
	SDL_Quit()

Switch between two images
=========================

Example:

.. code-block:: none

	Load "libsdl.ring"

	sdl_init(SDL_INIT_EVERYTHING)
	win = SDL_CreateWindow("Hello World!", 100, 100, 640, 480, SDL_WINDOW_SHOWN)
	ren = SDL_CreateRenderer(win, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC )
	bmp = SDL_LoadBMP("hello.bmp")
	tex = SDL_CreateTextureFromSurface(ren,bmp)
	SDL_FreeSurface(bmp)
	bmp = SDL_LoadBMP("hello2.bmp")
	tex2 = SDL_CreateTextureFromSurface(ren,bmp)
	SDL_FreeSurface(bmp)

	for x = 1 to 10 showtex(tex) showtex(tex2) next

	SDL_DestroyTexture(tex)
	SDL_DestroyTexture(tex2)
	SDL_DestroyRenderer(ren)
	SDL_DestroyWindow(win)
	SDL_Quit()

	func showtex oTex
		SDL_RenderClear(ren)
		SDL_RenderCopy2(ren,oTex)
		SDL_RenderPresent(ren)
		SDL_Delay(200)

Draw Rectangle
==============

Example:

.. code-block:: none

	Load "libsdl.ring"

	sdl_init(SDL_INIT_EVERYTHING)
	win = SDL_CreateWindow("Hello World!", 100, 100, 640, 480, SDL_WINDOW_SHOWN)
	ren = SDL_CreateRenderer(win, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC )
	SDL_RenderClear(ren)
	rect = sdl_new_sdl_rect()
	sdl_set_sdl_rect_x(rect,10)
	sdl_set_sdl_rect_y(rect,10)
	sdl_set_sdl_rect_w(rect,100)
	sdl_set_sdl_rect_h(rect,100)
	SDL_SetRenderDrawColor(ren,255,255,255,255)
	SDL_RenderDrawRect(ren,rect)
	sdl_destroy_sdl_rect(rect)
	SDL_RenderPresent(ren)
	SDL_Delay(2000)
	SDL_DestroyRenderer(ren)
	SDL_DestroyWindow(win)
	SDL_Quit()

