.. index:: 
	single: Frequently Asked Questions; Introduction

================================
Frequently Asked Questions (FAQ)
================================

.. index:: 
	pair: Frequently Asked Questions; Philosophy behind data types in Ring

What is the philosophy behind data types in Ring?
=================================================

The Ring programming language is designed to be SMALL. 
The language provides the basic constructs that you need to do anything!
One of the goals is to keep the basic constructs simple and small as possible.

Using Lists in Ring you can

* Create Arrays (one data type)
* Create Lists (Mix of data types)
* Create Tree (Nested arrays)
* Use String Index (Looks like Dictionary/Hash Table)

The same principle is applied to Numbers

* You can use the number for int value
* You can use the number for double value
* You can use the number for Boolean value (True/False)

The sample principle is applied for Strings

* You can use the string for storing one character 
* You can use the string for storing text (one or many lines)
* You can use the string for storing binary data
* You can use the string for storing date
* You can use the string for storing time
* You can use the string for storing NULL values (empty strings)

And we have Object Oriented Support + Operator Overloading where the programmer
can define new data types and use them as default types defined by the language

So We have

* A small and simple language that someone can pick in little days
* A fast language that provide primitive types (String – Number – List – Object)
* A flexible language that can be extended using OOP to add new types according to the application domain


.. index:: 
	pair: Frequently Asked Questions; Goal of including the "Main" function in Ring

What is the goal of including the "Main" function in Ring?
==========================================================

The main function is very important, you need it when you want to write statements that uses 
local variables instead of the Global scope.

Example:

.. code-block:: ring

	x = 10
	myfunc()
	See "X value = " + X  # here i expect that x will be (10)
        	              # but i will get another value (6) because myfunc() uses x !
	Func myfunc
	   for x = 1 to 5
	       See x + nl
	   next

Output:

.. code-block:: ring

	1
	2
	3
	4
	5
	X value = 6

Now using the Main function

.. code-block:: ring

	Func Main 
	   x = 10
	   myfunc()
	   See "X value = " + X                         

	Func myfunc
	   for x = 1 to 5
	       See x + nl
	   next

Output

.. code-block:: ring

	1
	2
	3
	4
	5
	X value = 10

.. index:: 
	pair: Frequently Asked Questions; List index start from 1

Why the list index start from 1 in Ring?
========================================

It\’s about how we count in the real world, when we have three apples in our hand

we say 1 2 3 

We don\'t start from 0

The question must be why the other languages start from 0 ?

The answer is, because this is related to the machine and how we deal with values and memory address.

Example

we have array called myarray[5]

In memory : myarray will have an address

The first item will be stored in that address

The second item will come after that address and so on

Now when we need to point to the first item we need the address of myarray

So we type myarray[0] because myarray + 0 result will still point to the first item

for the second item myarray[1] because myarray + 1 result will point to the second item and so on

In Low Level languages or languages near to the machine it\'s good to be like this

But for high level language designed for applications it\’s better to be natural

Example

.. code-block:: ring

	mylist = [1,2,3,4,5]
	for x = 1 to len(mylist)
		see x + nl
	next

In the previous example we start from 1 to the length of the array
if the index starts from 0 we will write

.. code-block:: ring

	for x = 0 to len(mylist)-1

or remember the for loop in other languages

.. code-block:: ring

	for(x=0 ; x<nMax ; x++ )

You will use the < operator !


.. index:: 
	pair: Frequently Asked Questions; Search of global names while defining the class attributes

Why should a search of global names be made while defining the class attributes?
================================================================================

The question is why we don't avoid conflicts with global variable names when we
define the class attributes ?

At first remember that using the optional $ mark in the global variables names solve
the problem. Also using the Main function and avoiding global variables may help.

The Answer:

Ring is a dynamic language

We can in the run-time determine the class attributes (Add/Remove) 

We can execute (any code) while defining the class attributes

Example (1)

.. code-block:: ring

	oPerson = new Person
	Class Person
	   See "Welcome to the Ring language"

Example (2)

Customize attributes based on global variable value

.. code-block:: ring

	$debug = true
	oPerson = new Person
	see oPerson
	Class Person
	    if $debug  date=date()  time=time() ok

In the previous example when we have the $debug flag set to true, we will add the Date and Time
attributes to the object state.

Example (3)

Store the object index based on global variable

.. code-block:: ring

	$ObjectsCount = 0
	oPerson = new Person
	see oPerson
	oPerson2 = new Person
	see oPerson2
	Class Person
	      $ObjectsCount++
	      nIndex = $ObjectsCount

Output:

.. code-block:: ring

	nindex: 1.000000
	nindex: 2.000000

Common Example: 

* Connect to the database then get table columns (Using global Variable/Object).

* Create class attributes based on the column names.

* Later when you modify the database - you may don't need to modify your code.

It's flexibility but remember that power comes with great responsibility.

.. index:: 
	pair: Frequently Asked Questions; Constructor methods in Ring


Is there constructor methods in Ring?
=====================================

When you create new object for example

.. code-block:: ring

	new point

1 - Ring will allocate dynamic memory space to be used for the new object attributes that Ring doesn't know anything about them.

2 - Ring will change the current local scope and the current object scope to use the object state created in step (1)

3 - Ring will move the execution to the class Region (After the class name and before any methods)

4 - Any Instructions/Code in the class region will be executed as any Ring code

5 - Control is moved from the class region to the location of (new point) once we reach the end of the class region or we uses a Return command.

So All attributes that added to the object are dynamic attributes, this mean that you can control what attributes will be added through the runtime.

Example:

.. code-block:: ring

	$3D = False
	see  new point 
	$3D = True
	see new point 

	class point
		x y
		if not $3D return ok
		z

Output:

.. code-block:: none

	x: NULL
	y: NULL
	x: NULL
	y: NULL
	z: NULL

You have an option to call init() method directly when you create a new object 

This method can do anything with the object attributes as it will be called after creating the object and executing the class region code.


.. code-block:: ring

	p1 = new point3d(100,200,300)
	see p1

	class point3d
		x y z
		func init p1,p2,p3
			x=p1 y=p2 z=p3


.. index:: 
	pair: Frequently Asked Questions; What happens when we create a new object?

What happens when we create a new object?
=========================================

1- When you create an object, the class region code will be executed and you will have the object attributes based on the code in that region

2- Ring don't care about the object methods until you start calling a method

3- When you call a method, Ring will check the object class and the class parent (if you are using inheritance) and will collect the methods for you to be used now or later from any object that belong to the same class.

4- Since methods are dynamic and each object get the method from the class, you can after creating objects, add new methods and use it with the object or any object created or will be created from the same class.

Example:

.. code-block:: ring

	o1 = new point {x=10 y=20 z=30}
	o2 = new point {x=100 y=200 z =300}

	addmethod(o1,"print", func { see x + nl + y + nl + z + nl } )

	o1.print()
	o2.print()

	class point x y z

Output:

.. code-block:: none

	10
	20
	30
	100
	200
	300

.. index:: 
	pair: Frequently Asked Questions; Getter and Setter Methods

Can we use the attributes by accessing the Getter and Setter methods?
=====================================================================

Yes we can, The setter/getter methods are called automatically when you start using the attributes from outside the class
Also you can call the methods instead of using the attributes. It's your choice.

Example:

.. code-block:: ring

	o1 = new Developer
	o1.name = "Mahmoud"  see o1.name + nl
	o1 { name = "Gal"  see name }
	o1 { name = "Bert"  see name }

	o1.setname("Marino")
	see o1.getname()

	Class Developer

			name language = "Ring Programming Language"

			func setname value
					see "Message from SetName() Function!" + nl
					name = value + " - " + language

			func getname
					see "Message from GetName() Function!" + nl + nl
					return "Mr. " + name + nl

Output

.. code-block:: none

	Message from SetName() Function!
	Message from GetName() Function!

	Mr. Mahmoud - Ring Programming Language

	Message from SetName() Function!
	Message from GetName() Function!

	Mr. Gal - Ring Programming Language
	Message from SetName() Function!
	Message from GetName() Function!

	Mr. Bert - Ring Programming Language
	Message from SetName() Function!
	Message from GetName() Function!

	Mr. Marino - Ring Programming Language

.. index:: 
	pair: Frequently Asked Questions; What are the advantages to using Ring over native C or C++?

What are the advantages to using Ring over native C or C++?
===========================================================

Ring provides a better way to mix between different programming paradigms in solving problems.

The different programming paradigms play well together in the same language. 

(1) It's easy to switch from one programming paradigm to another one because the language constructs use similar syntax for similar concepts.

(2) The paradigms are provided to interact and used together in different layers in the software. 

for example you can create a game engine using object-oriented programming but write the game code using declarative programming or natural programming and behind the scene your declarative or natural code will use the object-oriented classes.

(3) Ring is very productive and natural programming language than C/C++ languages.

(4) Ring is a dynamic language. We can generate and execute code during the runtime. We have dynamic typing and weakly typed language for flexibility.

(5) The Garbage collector is generational (escape analysis) and also use reference counting. it's very fast and still provide control to the programmer who can delete memory at any time.

(6) Ring Compiler and Virtual Machine is just 15,000 lines of ANSI C code that can be compiled and used in any platform.

(7) You can use C/C++ libraries and Ring comes with code generator to create wrappers from C functions or C++ classes. so when you need more performance or when you need to use more libraries you can easily do that.

.. index:: 
	pair: Frequently Asked Questions; What are the advantages to using Ring over Python and Ruby?

What are the advantages to using Ring over Perl, PHP, Python or Ruby?
=====================================================================

(1) Ring is New and Innovative. The language will let you think different about programming.

(2) Ring is Smaller. (Lessons learned from the Lua language)

(3) Ring is Simple. (Lessons learned from the BASIC and Clipper/Harbour languages)

(4) Ring is more Natural. (Lessons learned from the Supernova language)

(5) Ring is more Declarative. (Lessons learned from REBOL and QML languages)

(6) Ring Implementation is Transparent, Visual and comes with Rich Features.


.. index:: 
	pair: Frequently Asked Questions; What are the advantages to using Ring over Tcl and Lua?

What are the advantages to using Ring over Tcl or Lua?
======================================================

(1) Clean Code (More Natural)

(2) More Features (A lot of useful programming paradigms)

.. index:: 
	pair: Frequently Asked Questions; What are the advantages to using Ring over C# or Java?

What are the advantages to using Ring over C# or Java?
======================================================

(1) Compact Code (Clean and Natural), More Productivity and Flexibility.

(2) Better support for Declarative Programming and Natural Programming


.. index:: 
	pair: Frequently Asked Questions; Why Ring uses 'See', 'Give', 'But' and 'Ok' Keywords?

Why Ring uses 'See', 'Give', 'But' and 'Ok' Keywords?
=====================================================

See and Give are selected not to be "opposite actions" but to reflect what I want to do as a programmer.

When i want to see something on the screen I use 'See'.

When i want to give some input to the program i use 'Give'.

My selection of "but" and "ok" is based on selecting keywords that can be written quickly.

Also using "but" is easy to remember than elseif/elif/elsif where each language select a different keyword.

In Ring 1.1 All of this is just an option.

You can use 'Put' and 'Get' instead of 'See' and 'Give'

You can use 'elseif' and 'end' insetad of 'But' and 'Ok'

It's your choice. In Ring we have syntax flexibility where we provide more than one style.

Also you can change the language keywords and operators.

Also you can define new natural languages too.


.. index:: 
	pair: Frequently Asked Questions; Can I connect to dbase/harbour database?

Can I connect to dbase/harbour database?
========================================

You can connect to any database using ODBC

To connect to xbase files (*.DBF)

.. code-block:: ring

	See "Using DBF Files using ODBC" + nl
	pODBC = odbc_init()
	See "Connect to database" + nl
	odbc_connect(pODBC,"Driver={Microsoft dBase Driver (*.dbf)};datasource=dBase Files;DriverID=277")
	See "Select data" + nl
	odbc_execute(pODBC,"select * from tel.dbf") 
	nMax = odbc_colcount(pODBC)
	See "Columns Count : " + nMax + nl
	while odbc_fetch(pODBC)
		   See "Row data:" + nl
		   for x = 1 to nMax
				   see odbc_getdata(pODBC,x) + " - "
		   next
	end
	See "Close database..." + nl
	odbc_disconnect(pODBC)
	odbc_close(pODBC)

Output 

.. code-block:: none

	Using DBF Files using ODBC
	Connect to database
	Select data
	Columns Count : 3
	Row data:
	Ahmad - Egypt - 234567 - Row data:
	Fady - Egypt - 345678 - Row data:
	Shady - Egypt - 456789 - Row data:
	Mahmoud - Egypt - 123456 - Close database...


Also you can connect to a Visual FoxPro database (requires installing Visual FoxPro driver)

.. code-block:: ring


	See "ODBC test 6" + nl
	pODBC = odbc_init()
	See "Connect to database" + nl
	odbc_connect(pODBC,"Driver={Microsoft Visual FoxPro Driver};SourceType=DBC;SourceDB=C:\PWCT19\ssbuild\PWCTDATA\CH1\Data\mydata.dbc;") 
	See "Select data" + nl
	see odbc_execute(pODBC,"select * from t38") + nl
	nMax = odbc_colcount(pODBC)
	See "Columns Count : " + nMax + nl
	while odbc_fetch(pODBC)
		See "Row data:" + nl
		for x = 1 to nMax
			see odbc_getdata(pODBC,x) + " - "
		next
	end
	See "Close database..." + nl
	odbc_disconnect(pODBC)
	odbc_close(pODBC)

.. index:: 
	pair: Frequently Asked Questions; What about the Boolean values in Ring?

What about the Boolean values in Ring?
======================================


You can use true for 1 and false for 0

when you test the result of Boolean expressions in your code.

Just when you print the value using the see command you will see 1 for (true) and 0 for (false)

Why ?

Because Ring contains only 4 types of variables

(1) Number

(2) String

(3) List

(4) Object

The first type (Number) is used to represent int, double and Boolean values.

The second type (String) is used to represent char, array of characters, date and time.

The third type (List) is used to represent Arrays of one type, Arrays of more than one type, Hash (Dictionary), Tree, etc.

The object can be an object created from a Ring class (Any Class) or just a C Pointer that we get from calling a C/C++ function/method.

Why ?

The Ring is designed to give the programmer/developer the most simple constructs that can be used to do everything.
The programmer/developer can customize the language by creating new classes (and use operator overloading) to get more types that he care about according to the problem domain.

Why ?

Because simple is better, and easy to learn and remember!
And this provide flexibility to convert between high level types that can be represented using the same basic type


.. index:: 
	pair: Frequently Asked Questions; What is the difference between Ring and Python? And is Ring Open Source?

What is the difference between Ring and Python? And is Ring Open Source?
========================================================================

Yes the language is Free Open Source (MIT license)

In general I like Python and Ruby but i was looking for a language more suitable for creating the next version of
the Programming Without Coding Technology (PWCT) software so i started the Ring design.

Some simple changes that matters for my goal are 

(1) Not case sensitive

(2) The list index start from 1

(3) You can call functions before definition

(4) Don't use Python syntax like (indentation, using self, :, pass & _) 

(5) Weakly typed (convert automatically between types based on context)

(6) The programs follow simple and constant structure (Statements then functions then packages and classes)

(7) Using the '=' operator for assignment and for testing values 

Critical changes are

(1) Small Language : The Ring compiler + Virtual Machine = 15K lines of C code , the other 85K lines are related to libraries and are optional when we go for embedded the language in C/C++ programs.

(2) The Garbage collector : Uses Escape Analysis/Reference counting and give the programmer the ability to determine when to delete memory using the assignment operator

(3) Compact Syntax : Ring is not line sensitive, you don't need to write ; or press ENTER to separate between statements

(4) Using { } to access the object then use the object attributes and methods directly

(5) Natural Programming : It's very easy to create natural interfaces using Ring based on OOP

(6) Declarative Programming using Nested Structure

The Ring programming language is designed based on my experience from using many other
languages like C, C++, C#, Lua, PHP, Python, Ruby, Harbour, Basic and Supernova
And the language comes with innovative features added to achieve the language goal

* Applications programming language.
* Productivity and developing high quality solutions that can scale.
* Small and fast language that can be embedded in C/C++ projects.
* Simple language that can be used in education and introducing Compiler/VM concepts.
* General-Purpose language that can be used for creating domain-specific libraries, frameworks and tools.
* Practical language designed for creating the next version of the Programming Without Coding Technology software.
