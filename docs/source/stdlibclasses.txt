==============
Stdlib Classes
==============

In this chapter we are going to learn about the classes in the stdlib.ring

* String Class
* List Class
* Stack Class
* Queue Class
* HashTable Class
* Tree Class
* Math Class
* DateTime Class
* File Class
* System Class
* Debug Class
* DataType Class
* Conversion Class
* ODBC CLass
* MySQL Class
* SQLite Class
* Security Class
* Internet Class


String Class
============

Methods:

===========================	======================================================================
Method				Description/Output
===========================	======================================================================
Init(String|Number|List) 
Lower()  			New String - Lower case characters
Upper()  			New String - Upper case characters
Left(x)  			New String - contains x characters from the left
Right(x) 			New String - contains x characters from the right
Lines()  			Number - Lines count
Trim()   			New String - Remove Spaces
Copy(x)  			New String - repeat string x times
strcmp(cString)   		Compare string with cString  
tolist()	  		List (String Lines to String Items)
tofile(cFileName) 		Write string to file
get(nPos1,nPos2)  		New String - from nPos1 to nPos2
getfrom(nPos1)	  		New String - from nPos1 to the end of the string
replace(cStr1,cStr2,lCase) 	New String - Replace cStr1 with cStr2 , lCase (True=Math Case)
split()		  		List - Each Word as list item
===========================	======================================================================

Example:

.. code-block:: none

	Load "stdlib.ring"

	See "Testing the String Class" + nl
	oString = new string("Hello, World!")
	oString.println()
	oString.upper().println()
	oString.lower().println()
	oString.left(5).println()
	oString.right(6).println()
	oString = new string("Hi" + nl + "Hello" )
	See oString.lines() + nl
	oString = new string("    Welcome    ")
	oString.println()
	oString.trim().println()
	oString = new string("Hello! ")
	oString.copy(3).println()
	see oString.strcmp("Hello! ") + nl
	see oString.strcmp("Hello ") + nl
	see oString.strcmp("Hello!! ") + nl
	oString = new string(["one","two","three"])
	oString.print()
	see oString.lines() + nl
	oString = new String(1234)
	oString.println()
	oString = new String("one"+nl+"two"+nl+"three")
	aList = oString.tolist()
	see "List Items" + nl See aList
	oString = new String( "Welcome to the Ring programming language")
	See "the - position : " + oString.pos("the") + nl
	oString = oString.getfrom(oString.pos("Ring"))
	oString.println()
	oString.get(1,4).println()
	oString = oString.replace("Ring","***Ring***",true)
	oString.println()
	oString = oString.replace("ring","***Ring***",false)
	oString.println()
	oString1 = new string("First")
	oString2 = new string("Second")
	oString = oString1 + oString2
	oString.println()
	oString = oString1 * 3
	oString.println()
	for t in ostring see t next
	oString.tofile("test.txt")
	oString = new string("one two three")
	see nl
	see ostring.split()
	oString {
		set("Hello") println()
		set("How are you?") println()
	}

Output:

.. code-block:: none

	Testing the String Class
	Hello, World!
	HELLO, WORLD!
	hello, world!
	Hello
	World!
	2
		Welcome
	Welcome
	Hello! Hello! Hello!
	0
	1
	-1
	one
	two
	three
	4
	1234
	List Items
	one
	two
	three
	the - position : 12
	Ring programming language
	Ring
	***Ring*** programming language
	******Ring****** programming language
	FirstSecond
	FirstFirstFirst
	FirstFirstFirst
	one
	two
	three
	Hello
	How are you?

	
List Class
==========

Methods:

===========================	======================================================================
Method						Description/Output
===========================	======================================================================
Init(String|List)			
Add(Value)					Add item to the list
Delete(nIndex)				Delete item from the list 
Item(nIndex)				Get item from the list
First()						Get the first item in the list
Last()						Get the last item in the list
Set(nIndex,Value)			Set item value
FindInColumn(nCol,Value)	Find item in a column 
Sort()						Sort items - return new list
Reverse()					Reverse items - return new list
Insert(nIndex,Value)		Inset Item after nIndex
===========================	======================================================================


example:

.. code-block:: none

	Load "stdlib.ring"

	oList = new list ( [1,2,3] )
	oList.Add(4)
	oList.print()
	see oList.item(1) + nl
	oList.delete(4)
	oList.print()
	see oList.first() + nl
	see oList.last() + nl
	oList { set(1,"one") set(2,"two") set(3,"three") print() }
	see oList.find("two") + nl
	oList.sort().print()
	oList.reverse().print()
	oList.insert(2,"nice")
	oList.print()
	oList = new list ( [ [1,"one"],[2,"two"],[3,"three"] ] )
	see copy("*",10) + nl
	oList.print()
	see "Search two : " + oList.findincolumn(2,"two") + nl
	see "Search 1 : " + oList.findincolumn(1,1) + nl
	oList = new list ( [ "Egypt" , "USA" , "KSA" ] )
	for x in oList
		see x + nl
	next
	oList =  new list ( [1,2,3,4] )
	oList + [5,6,7] 
	oList.print()
	oList = new list ( ["one","two"] )
	oList2 = new list ( ["three","four"] )
	oList + oList2
	oList.print()

	
output:

.. code-block:: none

	1
	2
	3
	4
	1
	1
	2
	3
	1
	3
	one
	two
	three
	2
	one
	three
	two
	three
	two
	one
	one
	two
	nice
	three
	**********
	1
	one
	2
	two
	3
	three
	Search two : 2
	Search 1 : 1
	Egypt
	USA
	KSA
	1
	2
	3
	4
	5
	6
	7
	one
	two
	three
	four

	
Stack Class
===========

Methods:

===========================	======================================================================
Method						Description/Output
===========================	======================================================================
Init(String|Number|List)
Push(Value)					Push item to the stack
Pop()						Pop item from the stack
Print()						Print the stack items
===========================	======================================================================

example:

.. code-block:: none

	Load "stdlib.ring"

	oStack = new Stack
	oStack.push(1)
	oStack.push(2)
	oStack.push(3)
	see oStack.pop() + nl
	see oStack.pop() + nl
	see oStack.pop() + nl	
	oStack.push(4)
	see oStack.pop() + nl
	oStack { push("one") push("two") push("three") }
	oStack.print()	
	
output:

.. code-block:: none

	3
	2
	1
	4
	three
	two
	one
	
	
Queue Class
===========

Parent Class : List Class

Methods:

===========================	======================================================================
Method						Description/Output
===========================	======================================================================
Init(String|Number|List)
Remove()					Remove item from the Queue.
===========================	======================================================================

example:

.. code-block:: none

	Load "stdlib.ring"

	oQueue = new Queue
	oQueue.add(1)
	oQueue.add(2)
	oQueue.add(3)
	see oQueue.remove() + nl
	see oQueue.remove() + nl
	see oQueue.remove() + nl
	oQueue.add(4)
	see oQueue.remove() + nl
	oQueue { add("one") add("two") add("three") }
	oQueue.print()
	
output:

.. code-block:: none

	1
	2
	3
	4
	one
	two
	three

