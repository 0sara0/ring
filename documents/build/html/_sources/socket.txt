.. index:: 
	single: socket; Introduction

================
Socket Extension
================

In this chapter we will learn about using the Socket extension.

.. index:: 
	pair: socket; TCP Server

TCP Server
==========

Example (TCP Server Code): 

.. code-block:: ring

	load "socket.ring" 

	sock = socket(AF_INET,SOCK_STREAM,0) 
	bind(sock,"127.0.0.1",5050)
	listen(sock,5)
	ns = accept(sock)

	send(ns,"Hello Client")
	msg = recv(ns,1024)
	? "Client Say >> " + msg
	close(sock)
	? "socket connection closed"

.. index:: 
	pair: socket; TCP Client

TCP Client
==========

Example (TCP Client Code):

.. code-block:: ring

	load "socket.ring" 

	sock = socket(AF_INET,SOCK_STREAM)
	connect(sock,"127.0.0.1",5050)

	send(sock,"Hello Server")
	msg = recv(sock,1024)
	? "Server Say >> " + msg

	close(sock)
	? "socket connection closed"

.. index:: 
	pair: socket; UDP Server

UDP Server
==========

Example (UDP Server Code):

.. code-block:: ring

	load 'socket.ring'

	sock = socket(AF_INET,SOCK_DGRAM)
	bind(sock,"127.0.0.1",5050)

	msg = recvfrom(sock,1024)
	? "Client Say >> " + msg
	sendto(sock,"Hello Client")
	close(sock)

	? "Socket connection closed"

.. index:: 
	pair: socket; UDP Client

UDP Client
==========

Example (UDP Client Code):

.. code-block:: ring

	load 'socket.ring'

	sock = socket(AF_INET,SOCK_DGRAM)
	connect(sock,"127.0.0.1",5050)
	sendto(sock,"Hello Server")
	msg = recvfrom(sock,1024)
	? "Server Say >> " + msg
	close(sock)
	? "Socket connection closed"

.. index:: 
	pair: socket; Functions

Functions
=========

The next functions are provided by this extension

.. code-block:: none

	socket(nAddressFamily, nConnectionType) -> SocketHandle
	bind(pSocketHandle, cHost , nPort)
	listen(pSocketHandle, nBacklog)
	accept(pSocketHandle) -> pConnectionHandle
	send(pConnectionHandle|pSocketHandle,cMessage)
	sendto(pSocketHandle,cMessage)
	recv(pConnectionHandle|pSocketHandle,nBuffer) -> cData
	recvfrom(pSocketHandle, nBuffer) -> cData
	connect(pSocketHandle, cHost , nPort) -> return <0> if successful
	close(pSocketHandle)
	gethostbyname(cHostName) -> cIPAddress
	gethostbyaddr(cIPAddress) -> aListOfHostInfo
	gethostname() -> cHostName
	getservbyname(cName) -> nPort
	getservbyport(nPort) -> cName

Example:

.. code-block:: ring

	load "socket.ring"

	host = gethostbyname("google.com") 
	? host
	? copy("=",30)
	? gethostbyaddr(host)
	? copy("=",30)
	? gethostname()
	? copy("=",30)
	? getservbyname("ftp")
	? copy("=",30)
	? getservbyport(21)

.. index:: 
	pair: socket; Constants

Constants
=========

Address Family:

.. code-block:: none   

	AF_INET       #  mean use IPV4
	AF_INET6      #  ........ IPV6

Connection type:

.. code-block:: none   

	SOCK_STREAM   #  mean use TCP Protocol
	SOCK_DGRAM    #  ........ UDP ........
