<code>

/* 
	OpenGL 2.1 Extension
	Copyright (c) 2017 Mahmoud Fayed <msfclipper@yahoo.com> 
*/

<filter> ismacosx()
#include <GL/glew.h>
#include <GLUT/glut.h>
</filter>

<filter> not ismacosx()
#include <GL/glew.h>
#include <GL/glut.h>
</filter>

</code>

<runcode>
aNumberTypes + "GLint"
aNumberTypes + "GLuint"
aNumberTypes + "unsigned"
aNumberTypes + "GLboolean"
aNumberTypes + "GLdouble"
aNumberTypes + "GLfloat"
aNumberTypes + "GLchar"
aNumberTypes + "GLsizeiptr"
aNumberTypes + "GLintptr"
aEnumTypes + "GLbitfield"
aEnumTypes + "GLenum"
aEnumTypes + "GLsizei"
</runcode>

<comment>
OpenGL 2.1 functions
From this reference : https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/
</comment>

<constant>
</constant>

void glAccum(GLenum op,GLfloat value)
void glActiveTexture(GLenum texture)
void glAlphaFunc(GLenum func,GLclampf ref)
GLboolean glAreTexturesResident(GLsizei n,const GLuint * textures,GLboolean * residences)
void glArrayElement(GLint i)
void glAttachShader(GLuint program,GLuint shader) 
void glBegin(GLenum mode)
void glBeginQuery(GLenum target,GLuint id)
void glBindAttribLocation(GLuint program,GLuint index,const GLchar *name)
void glBindBuffer(GLenum target,GLuint buffer)
void glBindTexture(GLenum target,GLuint texture)
void glBitmap(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte * bitmap)
void glBlendColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
void glBlendEquation(GLenum mode)
void glBlendEquationSeparate(GLenum modeRGB,GLenum modeAlpha) 
void glBlendFunc(GLenum sfactor,GLenum dfactor)
void glBlendFuncSeparate(GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
void glBufferData(GLenum target,GLsizeiptr size,const GLvoid * data,GLenum usage)
void glBufferSubData(GLenum target,GLintptr offset,GLsizeiptr size,const GLvoid * data)
void glCallList(GLuint list)
void glCallLists(GLsizei n,GLenum type,const GLvoid * lists)
void glClear(GLbitfield mask)
void glClearAccum(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
void glClearColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
void glClearDepth(GLclampd depth)
void glClearIndex(GLfloat c)
void glClearStencil(GLint s)
void glClientActiveTexture(GLenum texture)
void glClipPlane(GLenum plane,const GLdouble * equation)
void glColor3b(GLbyte red,GLbyte green,GLbyte blue)
void glColor3s(GLshort red,GLshort green,GLshort blue)
void glColor3i(GLint red,GLint green,GLint blue)
void glColor3f(GLfloat red,GLfloat green,GLfloat blue)
void glColor3d(GLdouble red,GLdouble green,GLdouble blue)
void glColor3ub(GLubyte red,GLubyte green,GLubyte blue)
void glColor3us(GLushort red,GLushort green,GLushort blue)
void glColor3ui(GLuint red,GLuint green,GLuint blue)
void glColor4b(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha)
void glColor4s(GLshort red,GLshort green,GLshort blue,GLshort alpha)
void glColor4i(GLint red,GLint green,GLint blue,GLint alpha)
void glColor4f(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
void glColor4d(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha)
void glColor4ub(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha)
void glColor4us(GLushort red,GLushort green,GLushort blue,GLushort alpha)
void glColor4ui(GLuint red,GLuint green,GLuint blue,GLuint alpha)
void glColor3bv(const GLbyte * v)
void glColor3sv(const GLshort * v)
void glColor3iv(const GLint * v)
void glColor3fv(const GLfloat * v)
void glColor3dv(const GLdouble * v)
void glColor3ubv(const GLubyte * v)
void glColor3usv(const GLushort * v) 
void glColor3uiv(const GLuint * v)
void glColor4bv(const GLbyte * v)
void glColor4sv(const GLshort * v)
void glColor4iv(const GLint * v)
void glColor4fv(const GLfloat * v)
void glColor4dv(const GLdouble * v)
void glColor4ubv(const GLubyte * v)
void glColor4usv(const GLushort * v)
void glColor4uiv(const GLuint * v)
void glColorMask(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
void glColorMaterial(GLenum face,GLenum mode)
void glColorPointer(GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
void glColorSubTable(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const GLvoid * data)
void glColorTable(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * data)
void glColorTableParameterfv(GLenum target,GLenum pname,const GLfloat * params)
void glColorTableParameteriv(GLenum target,GLenum pname,const GLint * params)
void glCompileShader(GLuint shader)
void glCompressedTexImage1D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
void glCompressedTexImage2D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
void glCompressedTexImage3D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
void glCompressedTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
void glCompressedTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
void glCompressedTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
void glConvolutionFilter1D(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * data) 
void glConvolutionFilter2D(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * data)
void glConvolutionParameterf(GLenum target,GLenum pname,GLfloat params) 
void glConvolutionParameteri(GLenum target,GLenum pname,GLint params)
void glConvolutionParameterfv(GLenum target,GLenum pname,const GLfloat * params)
void glConvolutionParameteriv(GLenum target,GLenum pname,const GLint * params)
void glCopyColorSubTable(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
void glCopyColorTable(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
void glCopyConvolutionFilter1D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width) 
void glCopyConvolutionFilter2D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height) 
void glCopyPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type)
void glCopyTexImage1D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
void glCopyTexImage2D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
void glCopyTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
void glCopyTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
void glCopyTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
GLuint glCreateProgram(void)
GLuint glCreateShader(GLenum shaderType)
void glCullFace(GLenum mode)
void glDeleteBuffers(GLsizei n,const GLuint * buffers)
void glDeleteLists(GLuint list,GLsizei range)
void glDeleteProgram(GLuint program)
void glDeleteQueries(GLsizei n,const GLuint * ids)
void glDeleteShader(GLuint shader)
void glDeleteTextures(GLsizei n,const GLuint * textures)
void glDepthFunc(GLenum func)
void glDepthMask(GLboolean flag)
void glDepthRange(GLclampd nearVal,GLclampd farVal) 
void glDetachShader(GLuint program,GLuint shader)
void glEnable(GLenum  cap)
void glEnableClientState(GLenum cap)
void glEnableVertexAttribArray(GLuint index)
void glDisableVertexAttribArray(GLuint index)
void glDrawArrays(GLenum mode,GLint first,GLsizei count)
void glDrawBuffer(GLenum mode)
void glDrawBuffers(GLsizei n,const GLenum *bufs)
void glDrawElements(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices)
void glDrawPixels(GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * data)
void glDrawRangeElements(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
void glEdgeFlag(GLboolean flag)
void glEdgeFlagPointer(GLsizei stride,const GLvoid * pointer)
void glEnd(void)
void glEndList( void) 
void glEndQuery(GLenum target)
void glEvalCoord1f(GLfloat u)
void glEvalCoord1d(GLdouble u)
void glEvalCoord2f(GLfloat u,GLfloat v)
void glEvalCoord2d(GLdouble u,GLdouble v) 
void glEvalMesh1(GLenum mode,GLint i1,GLint i2)
void glEvalPoint1(GLint i) 
void glEvalPoint2(GLint i,GLint j)
void glFeedbackBuffer(GLsizei size,GLenum type,GLfloat * buffer)
void glFinish(void)
void glFlush(void)
void glFogf(GLenum pname,GLfloat param)
void glFogi(GLenum pname,GLint param)
void glFogfv(GLenum pname,const GLfloat * params)
void glFogiv(GLenum pname,const GLint * params) 
void glFogCoordd(GLdouble coord)
void glFogCoordf(GLfloat coord)
void glFogCoorddv(GLdouble * coord)
void glFogCoordfv(GLfloat * coord)
void glFogCoordPointer(GLenum type,GLsizei stride,GLvoid * pointer)
void glFrontFace(GLenum mode)
void glFrustum(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble nearVal,GLdouble farVal)
void glGenBuffers(GLsizei n,GLuint * buffers)
GLuint glGenLists(GLsizei range)
void glGenQueries(GLsizei n,GLuint * ids)
void glGenTextures(GLsizei n,GLuint * textures)
void glGetBooleanv(GLenum pname,GLboolean * params)
void glGetDoublev(GLenum pname,GLdouble * params)
void glGetFloatv(GLenum pname,GLfloat * params)
void glGetIntegerv(GLenum pname,GLint * params)
void glGetActiveAttrib(GLuint program,GLuint index,GLsizei bufSize,GLsizei *length,GLint *size,GLenum *type,GLchar *name) 
void glGetActiveUniform(GLuint program,GLuint index,GLsizei bufSize,GLsizei *length,GLint *size,GLenum *type,GLchar *name)
void glGetAttachedShaders(GLuint program,GLsizei maxCount,GLsizei *count,GLuint *shaders)
GLint glGetAttribLocation(GLuint program,const GLchar *name)
void glGetBufferParameteriv(GLenum target,GLenum value,GLint * data)
void glGetBufferPointerv(GLenum target,GLenum pname,GLvoid ** params)
void glGetBufferSubData(GLenum target,GLintptr offset,GLsizeiptr size,GLvoid * data)
void glGetClipPlane(GLenum plane,GLdouble * equation)
void glGetColorTable(GLenum target,GLenum format,GLenum type,GLvoid * table)
void glGetColorTableParameterfv(GLenum target,GLenum pname,GLfloat * params)
void glGetColorTableParameteriv(GLenum target,GLenum pname,GLint * params)
void glGetCompressedTexImage(GLenum target,GLint lod,GLvoid * img)
void glGetConvolutionFilter(GLenum target,GLenum format,GLenum type,GLvoid * image)
void glGetConvolutionParameterfv(GLenum target,GLenum pname,GLfloat * params) 
void glGetConvolutionParameteriv(GLenum target,GLenum pname,GLint * params)
GLenum glGetError( void)
void glGetHistogram(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid * values)
void glGetHistogramParameterfv(GLenum target,GLenum pname,GLfloat * params)
void glGetHistogramParameteriv(GLenum target,GLenum pname,GLint * params) 
void glGetLightfv(GLenum light,GLenum pname,GLfloat * params)
void glGetLightiv(GLenum light,GLenum pname,GLint * params) 
void glGetMapdv(GLenum target,GLenum query,GLdouble * v)
void glGetMapfv(GLenum target,GLenum query,GLfloat * v)
void glGetMapiv(GLenum target,GLenum query,GLint * v)
void glGetMaterialfv(GLenum face,GLenum pname,GLfloat * params)
void glGetMaterialiv(GLenum face,GLenum pname,GLint * params) 
void glGetMinmax(GLenum target,GLboolean reset,GLenum format,GLenum types,GLvoid * values)
void glGetMinmaxParameterfv(GLenum target,GLenum pname,GLfloat * params)
void glGetMinmaxParameteriv(GLenum target,GLenum pname,GLint * params)
void glGetPixelMapfv(GLenum map,GLfloat * data) 
void glGetPixelMapuiv(GLenum map,GLuint * data)
void glGetPixelMapusv(GLenum map,GLushort * data)
void glGetPointerv(GLenum pname,GLvoid ** params)
void glGetPolygonStipple(GLubyte * pattern)
void glGetProgramiv(GLuint program,GLenum pname,GLint *params)
void glGetProgramInfoLog(GLuint program,GLsizei maxLength,GLsizei *length,GLchar *infoLog)
void glGetQueryObjectiv(GLuint id,GLenum pname,GLint * params)
void glGetQueryObjectuiv(GLuint id,GLenum pname,GLuint * params)
void glGetQueryiv(GLenum target,GLenum pname,GLint * params)
void glGetSeparableFilter(GLenum target,GLenum format,GLenum type,GLvoid * row,GLvoid * column,GLvoid * span)
void glGetShaderiv(GLuint shader,GLenum pname,GLint *params)
void glGetShaderInfoLog(GLuint shader,GLsizei maxLength,GLsizei *length,GLchar *infoLog)
void glGetShaderSource(GLuint shader,GLsizei bufSize,GLsizei *length,GLchar *source)
const GLubyte* glGetString(GLenum name)
void glGetTexEnvfv(GLenum target,GLenum pname,GLfloat * params)
void glGetTexEnviv(GLenum target,GLenum pname,GLint * params)
void glGetTexGendv(GLenum coord,GLenum pname,GLdouble * params)
void glGetTexGenfv(GLenum coord,GLenum pname,GLfloat * params)
void glGetTexGeniv(GLenum coord,GLenum pname,GLint * params)
void glGetTexImage(GLenum target,GLint level,GLenum format,GLenum type,GLvoid * img)
void glGetTexLevelParameterfv(GLenum target,GLint level,GLenum pname,GLfloat * params)
void glGetTexLevelParameteriv(GLenum target,GLint level,GLenum pname,GLint * params)
void glGetTexParameterfv(GLenum target,GLenum pname,GLfloat * params)
void glGetTexParameteriv(GLenum target,GLenum pname,GLint * params)
void glGetUniformfv(GLuint program,GLint location,GLfloat *params) 
void glGetUniformiv(GLuint program,GLint location,GLint *params) 
GLint glGetUniformLocation(GLuint program,const GLchar *name)
void glGetVertexAttribdv(GLuint index,GLenum pname,GLdouble *params)
void glGetVertexAttribfv(GLuint index,GLenum pname,GLfloat *params)
void glGetVertexAttribiv(GLuint index,GLenum pname,GLint *params)
void glGetVertexAttribPointerv(GLuint index,GLenum pname,GLvoid **pointer)
void glHint(GLenum target,GLenum mode)
void glHistogram(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
void glIndexs(GLshort c)
void glIndexi(GLint c)
void glIndexf(GLfloat c)
void glIndexd(GLdouble c)
void glIndexub(GLubyte c)
void glIndexsv(const GLshort * c)
void glIndexiv(const GLint * c)
void glIndexfv(const GLfloat * c)
void glIndexdv(const GLdouble * c)
void glIndexubv(const GLubyte * c)
void glIndexMask(GLuint mask)
void glIndexPointer(GLenum type,GLsizei stride,const GLvoid * pointer)
void glInitNames( void)
void glInterleavedArrays(GLenum format,GLsizei stride,const GLvoid * pointer)
GLboolean glIsBuffer(GLuint buffer)
GLboolean glIsEnabled(GLenum cap)
GLboolean glIsList(GLuint list)
GLboolean glIsProgram(GLuint program)
GLboolean glIsQuery(GLuint id)
GLboolean glIsShader(GLuint shader)
GLboolean glIsTexture(GLuint texture)
void glLightf(GLenum light,GLenum pname,GLfloat param)
void glLighti(GLenum light,GLenum pname,GLint param)
void glLightfv(GLenum light,GLenum pname,const GLfloat * params)
void glLightiv(GLenum light,GLenum pname,const GLint * params)
void glLightModelf(GLenum pname,GLfloat param)
void glLightModeli(GLenum pname,GLint param)
void glLightModelfv(GLenum pname,const GLfloat * params)
void glLightModeliv(GLenum pname,const GLint * params)
void glLineStipple(GLint factor,GLushort pattern)
void glLineWidth(GLfloat width)
void glLinkProgram(GLuint program)
void glListBase(GLuint base)
void glLoadIdentity( void)
void glLoadMatrixd(const GLdouble * m)
void glLoadMatrixf(const GLfloat * m)
void glLoadName(GLuint name)
void glLoadTransposeMatrixd(const GLdouble * m)
void glLoadTransposeMatrixf(const GLfloat * m)
void glLogicOp(GLenum opcode) 
void glMap1f(GLenum target,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
void glMap1d(GLenum target,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
void glMap2f(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
void glMap2d(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points) 
void * glMapBuffer(GLenum target,GLenum access)
void glMapGrid1d(GLint un,GLdouble u1,GLdouble u2)
void glMapGrid1f(GLint un,GLfloat u1,GLfloat u2)
void glMapGrid2d(GLint un,GLdouble u1,GLdouble u2,GLint vn,GLdouble v1,GLdouble v2)
void glMapGrid2f(GLint un,GLfloat u1,GLfloat u2,GLint vn,GLfloat v1,GLfloat v2)
void glMaterialf(GLenum face,GLenum pname,GLfloat param)
void glMateriali(GLenum face,GLenum pname,GLint param)
void glMatrixMode(GLenum mode)
void glMinmax(GLenum target,GLenum internalformat,GLboolean sink)
void glMultMatrixd(const GLdouble * m)
void glMultMatrixf(const GLfloat * m)
void glMultTransposeMatrixd(const GLdouble * m)
void glMultTransposeMatrixf(const GLfloat * m)
void glMultiDrawArrays(GLenum mode,GLint * first,GLsizei * count,GLsizei primcount)
void glMultiDrawElements(GLenum mode,const GLsizei * count,GLenum type,const GLvoid ** indices,GLsizei primcount) 
void glMultiTexCoord1s(GLenum target,GLshort s)
void glMultiTexCoord1i(GLenum target,GLint s)
void glMultiTexCoord1f(GLenum target,GLfloat s)
void glMultiTexCoord1d(GLenum target,GLdouble s)
void glMultiTexCoord2s(GLenum target,GLshort s,GLshort t)
void glMultiTexCoord2i(GLenum target,GLint s,GLint t)
void glMultiTexCoord2f(GLenum target,GLfloat s,GLfloat t)
void glMultiTexCoord2d(GLenum target,GLdouble s,GLdouble t)
void glMultiTexCoord3s(GLenum target,GLshort s,GLshort t,GLshort r)
void glMultiTexCoord3i(GLenum target,GLint s,GLint t,GLint r)
void glMultiTexCoord3f(GLenum target,GLfloat s,GLfloat t,GLfloat r)
void glMultiTexCoord3d(GLenum target,GLdouble s,GLdouble t,GLdouble r)
void glMultiTexCoord4s(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
void glMultiTexCoord4i(GLenum target,GLint s,GLint t,GLint r,GLint q)
void glMultiTexCoord4f(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
void glMultiTexCoord4d(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
void glMultiTexCoord1sv(GLenum target,const GLshort * v)
void glMultiTexCoord1iv(GLenum target,const GLint * v)
void glMultiTexCoord1fv(GLenum target,const GLfloat * v)
void glMultiTexCoord1dv(GLenum target,const GLdouble * v)
void glMultiTexCoord2sv(GLenum target,const GLshort * v)
void glMultiTexCoord2iv(GLenum target,const GLint * v)
void glMultiTexCoord2fv(GLenum target,const GLfloat * v)
void glMultiTexCoord2dv(GLenum target,const GLdouble * v)
void glMultiTexCoord3sv(GLenum target,const GLshort * v)
void glMultiTexCoord3iv(GLenum target,const GLint * v)
void glMultiTexCoord3fv(GLenum target,const GLfloat * v)
void glMultiTexCoord3dv(GLenum target,const GLdouble * v)
void glMultiTexCoord4sv(GLenum target,const GLshort * v)
void glMultiTexCoord4iv(GLenum target,const GLint * v)
void glMultiTexCoord4fv(GLenum target,const GLfloat * v)
void glMultiTexCoord4dv(GLenum target,const GLdouble * v) 
void glNewList(GLuint list,GLenum mode)
void glNormal3b(GLbyte nx,GLbyte ny,GLbyte nz)
void glNormal3d(GLdouble nx,GLdouble ny,GLdouble nz)
void glNormal3f(GLfloat nx,GLfloat ny,GLfloat nz)
void glNormal3i(GLint nx,GLint ny,GLint nz)
void glNormal3s(GLshort nx,GLshort ny,GLshort nz)
void glNormal3bv(const GLbyte * v)
void glNormal3dv(const GLdouble * v)
void glNormal3fv(const GLfloat * v)
void glNormal3iv(const GLint * v)
void glNormal3sv(const GLshort * v)
void glNormalPointer(GLenum type,GLsizei stride,const GLvoid * pointer)
void glOrtho(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble nearVal,GLdouble farVal)
void glPassThrough(GLfloat token)
void glPixelMapfv(GLenum map,GLsizei mapsize,const GLfloat * values)
void glPixelMapuiv(GLenum map,GLsizei mapsize,const GLuint * values)
void glPixelMapusv(GLenum map,GLsizei mapsize,const GLushort * values)
void glPixelStoref(GLenum pname,GLfloat param)
void glPixelStorei(GLenum pname,GLint param)
void glPixelTransferf(GLenum pname,GLfloat param) 
void glPixelTransferi(GLenum pname,GLint param)
void glPixelZoom(GLfloat xfactor,GLfloat yfactor)
void glPointParameterf(GLenum pname,GLfloat param)
void glPointParameteri(GLenum pname,GLint param)
void glPointSize(GLfloat size)
void glPolygonMode(GLenum face,GLenum mode)
void glPolygonOffset(GLfloat factor,GLfloat units) 
void glPolygonStipple(const GLubyte * pattern)
void glPushAttrib(GLbitfield mask)
void glPushClientAttrib(GLbitfield mask)
void glPushMatrix( void)
void glPushName(GLuint name)
void glPrioritizeTextures(GLsizei n,const GLuint * textures,const GLclampf * priorities)
void glPopMatrix( void)
void glRasterPos2s(GLshort x,GLshort y)
void glRasterPos2i(GLint x,GLint y)
void glRasterPos2f(GLfloat x,GLfloat y)
void glRasterPos2d(GLdouble x,GLdouble y)
void glRasterPos3s(GLshort x,GLshort y,GLshort z)
void glRasterPos3i(GLint x,GLint y,GLint z)
void glRasterPos3f(GLfloat x,GLfloat y,GLfloat z)
void glRasterPos3d(GLdouble x,GLdouble y,GLdouble z)
void glRasterPos4s(GLshort x,GLshort y,GLshort z,GLshort w)
void glRasterPos4i(GLint x,GLint y,GLint z,GLint w)
void glRasterPos4f(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
void glRasterPos4d(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
void glReadBuffer(GLenum mode)
void glReadPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid * data)
void glRectd(GLdouble x1,GLdouble y1,GLdouble x2,GLdouble y2)
void glRectf(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2)
void glRecti(GLint x1,GLint y1,GLint x2,GLint y2)
void glRects(GLshort x1,GLshort y1,GLshort x2,GLshort y2) 
void glRectdv(const GLdouble * v1,const GLdouble * v2)
void glRectfv(const GLfloat * v1,const GLfloat * v2)
void glRectiv(const GLint * v1,const GLint * v2)
void glRectsv(const GLshort * v1,const GLshort * v2)
GLint glRenderMode(GLenum mode)
void glResetHistogram(GLenum target)
void glRotated(GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
void glRotatef(GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
void glSampleCoverage(GLclampf value,GLboolean invert)
void glScaled(GLdouble x,GLdouble y,GLdouble z)
void glScalef(GLfloat x,GLfloat y,GLfloat z)
void glScissor(GLint x,GLint y,GLsizei width,GLsizei height)
void glSecondaryColor3b(GLbyte red,GLbyte green,GLbyte blue)
void glSecondaryColor3s(GLshort red,GLshort green,GLshort blue)
void glSecondaryColor3i(GLint red,GLint green,GLint blue)
void glSecondaryColor3f(GLfloat red,GLfloat green,GLfloat blue)
void glSecondaryColor3d(GLdouble red,GLdouble green,GLdouble blue)
void glSecondaryColor3ub(GLubyte red,GLubyte green,GLubyte blue)
void glSecondaryColor3us(GLushort red,GLushort green,GLushort blue)
void glSecondaryColor3ui(GLuint red,GLuint green,GLuint blue)
void glSecondaryColor3bv(const GLbyte * v)
void glSecondaryColor3sv(const GLshort * v)
void glSecondaryColor3iv(const GLint * v)
void glSecondaryColor3fv(const GLfloat * v)
void glSecondaryColor3dv(const GLdouble * v)
void glSecondaryColor3ubv(const GLubyte * v)
void glSecondaryColor3usv(const GLushort * v)
void glSecondaryColor3uiv(const GLuint * v)
void glSecondaryColorPointer(GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
void glSelectBuffer(GLsizei size,GLuint * buffer) 
void glSeparableFilter2D(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * row,const GLvoid * column)
void glShadeModel(GLenum mode)
void glShaderSource(GLuint shader,GLsizei count,const GLchar **string,const GLint *length)
void glStencilFunc(GLenum func,GLint ref,GLuint mask)
void glStencilFuncSeparate(GLenum face,GLenum func,GLint ref,GLuint mask) 
void glStencilMask(GLuint mask)
void glStencilMaskSeparate(GLenum face,GLuint mask)
void glStencilOp(GLenum sfail,GLenum dpfail,GLenum dppass)
void glStencilOpSeparate(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass) 
void glTexCoord1s(GLshort s)
void glTexCoord1i(GLint s)
void glTexCoord1f(GLfloat s)
void glTexCoord1d(GLdouble s)
void glTexCoord2s(GLshort s,GLshort t)
void glTexCoord2i(GLint s,GLint t)
void glTexCoord2f(GLfloat s,GLfloat t)
void glTexCoord2d(GLdouble s,GLdouble t)
void glTexCoord3s(GLshort s,GLshort t,GLshort r)
void glTexCoord3i(GLint s,GLint t,GLint r)
void glTexCoord3f(GLfloat s,GLfloat t,GLfloat r)
void glTexCoord3d(GLdouble s,GLdouble t,GLdouble r)
void glTexCoord4s(GLshort s,GLshort t,GLshort r,GLshort q)
void glTexCoord4i(GLint s,GLint t,GLint r,GLint q)
void glTexCoord4f(GLfloat s,GLfloat t,GLfloat r,GLfloat q) 
void glTexCoord4d(GLdouble s,GLdouble t,GLdouble r,GLdouble q)
void glTexCoord1sv(const GLshort * v) 
void glTexCoord1iv(const GLint * v)
void glTexCoord1fv(const GLfloat * v) 
void glTexCoord1dv(const GLdouble * v)
void glTexCoord2sv(const GLshort * v) 
void glTexCoord2iv(const GLint * v) 
void glTexCoord2fv(const GLfloat * v) 
void glTexCoord2dv(const GLdouble * v)
void glTexCoord3sv(const GLshort * v) 
void glTexCoord3iv(const GLint * v) 
void glTexCoord3fv(const GLfloat * v)
void glTexCoord3dv(const GLdouble * v) 
void glTexCoord4sv(const GLshort * v)
void glTexCoord4iv(const GLint * v) 
void glTexCoord4fv(const GLfloat * v) 
void glTexCoord4dv(const GLdouble * v)
void glTexCoordPointer(GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
void glTexEnvf(GLenum target,GLenum pname,GLfloat param)
void glTexEnvi(GLenum target,GLenum pname,GLint param)
void glTexGeni(GLenum coord,GLenum pname,GLint param)
void glTexGenf(GLenum coord,GLenum pname,GLfloat param)
void glTexGend(GLenum coord,GLenum pname,GLdouble param)
void glTexGeniv(GLenum coord,GLenum pname,const GLint * params)
void glTexGenfv(GLenum coord,GLenum pname,const GLfloat * params) 
void glTexGendv(GLenum coord,GLenum pname,const GLdouble * params)
void glTexImage1D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLint border,GLenum format,GLenum type,const GLvoid * data)
void glTexImage2D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid * data)
void glTexImage3D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * data)
void glTexParameterf(GLenum target,GLenum pname,GLfloat param)
void glTexParameteri(GLenum target,GLenum pname,GLint param)
void glTexParameterfv(GLenum target,GLenum pname,const GLfloat * params)
void glTexParameteriv(GLenum target,GLenum pname,const GLint * params)
void glTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid * data)
void glTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * data) 
void glTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * data)
void glTranslated(GLdouble x,GLdouble y,GLdouble z)
void glTranslatef(GLfloat x,GLfloat y,GLfloat z)
void glUniform1f(GLint location,GLfloat v0)
void glUniform2f(GLint location,GLfloat v0,GLfloat v1)
void glUniform3f(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
void glUniform4f(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
void glUniform1i(GLint location,GLint v0)
void glUniform2i(GLint location,GLint v0,GLint v1)
void glUniform3i(GLint location,GLint v0,GLint v1,GLint v2)
void glUniform4i(GLint location,GLint v0,GLint v1,GLint v2,GLint v3) 
void glUniform1fv(GLint location,GLsizei count,const GLfloat *value)
void glUniform2fv(GLint location,GLsizei count,const GLfloat *value)
void glUniform3fv(GLint location,GLsizei count,const GLfloat *value)
void glUniform4fv(GLint location,GLsizei count,const GLfloat *value)
void glUniform1iv(GLint location,GLsizei count,const GLint *value)
void glUniform2iv(GLint location,GLsizei count,const GLint *value)
void glUniform3iv(GLint location,GLsizei count,const GLint *value)
void glUniform4iv(GLint location,GLsizei count,const GLint *value)
void glUniformMatrix2fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value)
void glUniformMatrix3fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value)
void glUniformMatrix4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value)
void glUniformMatrix2x3fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value)
void glUniformMatrix3x2fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value)
void glUniformMatrix2x4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value)
void glUniformMatrix4x2fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value)
void glUniformMatrix3x4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value)
void glUniformMatrix4x3fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value)
void glUseProgram(GLuint program)
void glValidateProgram(GLuint program)
void glVertex2s(GLshort x,GLshort y)
void glVertex2i(GLint x,GLint y)
void glVertex2f(GLfloat x,GLfloat y)
void glVertex2d(GLdouble x,GLdouble y)
void glVertex3s(GLshort x,GLshort y,GLshort z)
void glVertex3i(GLint x,GLint y,GLint z)
void glVertex3f(GLfloat x,GLfloat y,GLfloat z)
void glVertex3d(GLdouble x,GLdouble y,GLdouble z)
void glVertex4s(GLshort x,GLshort y,GLshort z,GLshort w)
void glVertex4i(GLint x,GLint y,GLint z,GLint w)
void glVertex4f(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
void glVertex4d(GLdouble x,GLdouble y,GLdouble z,GLdouble w) 
void glVertex2sv(const GLshort * v)
void glVertex2iv(const GLint * v)
void glVertex2fv(const GLfloat * v)
void glVertex2dv(const GLdouble * v)
void glVertex3sv(const GLshort * v)
void glVertex3iv(const GLint * v)
void glVertex3fv(const GLfloat * v)
void glVertex3dv(const GLdouble * v)
void glVertex4sv(const GLshort * v)
void glVertex4iv(const GLint * v)
void glVertex4fv(const GLfloat * v)
void glVertex4dv(const GLdouble * v)
void glVertexAttrib1f(GLuint index,GLfloat v0)
void glVertexAttrib1s(GLuint index,GLshort v0)
void glVertexAttrib1d(GLuint index,GLdouble v0)
void glVertexAttrib2f(GLuint index,GLfloat v0,GLfloat v1)
void glVertexAttrib2s(GLuint index,GLshort v0,GLshort v1)
void glVertexAttrib2d(GLuint index,GLdouble v0,GLdouble v1)
void glVertexAttrib3f(GLuint index,GLfloat v0,GLfloat v1,GLfloat v2)
void glVertexAttrib3s(GLuint index,GLshort v0,GLshort v1,GLshort v2)
void glVertexAttrib3d(GLuint index,GLdouble v0,GLdouble v1,GLdouble v2)
void glVertexAttrib4f(GLuint index,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
void glVertexAttrib4s(GLuint index,GLshort v0,GLshort v1,GLshort v2,GLshort v3)
void glVertexAttrib4d(GLuint index,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
void glVertexAttrib4Nub(GLuint index,GLubyte v0,GLubyte v1,GLubyte v2,GLubyte v3)
void glVertexAttrib1fv(GLuint index,const GLfloat *v)
void glVertexAttrib1sv(GLuint index,const GLshort *v)
void glVertexAttrib1dv(GLuint index,const GLdouble *v)
void glVertexAttrib2fv(GLuint index,const GLfloat *v)
void glVertexAttrib2sv(GLuint index,const GLshort *v)
void glVertexAttrib2dv(GLuint index,const GLdouble *v)
void glVertexAttrib3fv(GLuint index,const GLfloat *v)
void glVertexAttrib3sv(GLuint index,const GLshort *v)
void glVertexAttrib3dv(GLuint index,const GLdouble *v)
void glVertexAttrib4fv(GLuint index,const GLfloat *v)
void glVertexAttrib4sv(GLuint index,const GLshort *v)
void glVertexAttrib4dv(GLuint index,const GLdouble *v)
void glVertexAttrib4iv(GLuint index,const GLint *v)
void glVertexAttrib4bv(GLuint index,const GLbyte *v)
void glVertexAttrib4ubv(GLuint index,const GLubyte *v)
void glVertexAttrib4usv(GLuint index,const GLushort *v)
void glVertexAttrib4uiv(GLuint index,const GLuint *v)
void glVertexAttribPointer(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const GLvoid * pointer)
void glVertexPointer(GLint size,GLenum type,GLsizei stride,const GLvoid * pointer) 
void glViewport(GLint x,GLint y,GLsizei width,GLsizei height)
void glWindowPos2s(GLshort x,GLshort y)
void glWindowPos2i(GLint x,GLint y)
void glWindowPos2f(GLfloat x,GLfloat y)
void glWindowPos2d(GLdouble x,GLdouble y)
void glWindowPos3s(GLshort x,GLshort y,GLshort z)
void glWindowPos3i(GLint x,GLint y,GLint z)
void glWindowPos3f(GLfloat x,GLfloat y,GLfloat z)
void glWindowPos3d(GLdouble x,GLdouble y,GLdouble z)
void glWindowPos2sv(const GLshort * v)
void glWindowPos2iv(const GLint * v)
void glWindowPos2fv(const GLfloat * v)
void glWindowPos2dv(const GLdouble * v)
void glWindowPos3sv(const GLshort * v)
void glWindowPos3iv(const GLint * v)
void glWindowPos3fv(const GLfloat * v)
void glWindowPos3dv(const GLdouble * v)
void gluBeginCurve(GLUnurbs* nurb)
void gluBeginPolygon(GLUtesselator* tess)
void gluBeginSurface(GLUnurbs* nurb)
void gluBeginTrim(GLUnurbs* nurb)
void gluCylinder(GLUquadric* quad,GLdouble base,GLdouble top,GLdouble height,GLint slices,GLint stacks)
void gluDeleteNurbsRenderer(GLUnurbs* nurb)
void gluDeleteQuadric(GLUquadric* quad)
void gluDeleteTess(GLUtesselator* tess)
void gluDisk(GLUquadric* quad,GLdouble inner,GLdouble outer,GLint slices,GLint loops)
void gluEndCurve(GLUnurbs* nurb)
void gluEndPolygon(GLUtesselator* tess)
void gluEndSurface(GLUnurbs* nurb)
void gluEndTrim(GLUnurbs* nurb)
const GLubyte * gluErrorString(GLenum error)
void gluGetNurbsProperty(GLUnurbs* nurb,GLenum property,GLfloat* data)
const GLubyte * gluGetString(GLenum name)
void gluGetTessProperty(GLUtesselator* tess,GLenum which,GLdouble* data)
void gluLoadSamplingMatrices(GLUnurbs* nurb,const GLfloat * model,const GLfloat * perspective,const GLint * view)
void gluLookAt(GLdouble eyeX,GLdouble eyeY,GLdouble eyeZ,GLdouble centerX,GLdouble centerY,GLdouble centerZ,GLdouble upX,GLdouble upY,GLdouble upZ)
