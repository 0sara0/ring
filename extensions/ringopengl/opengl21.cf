<code>

/* 
	OpenGL 2.1 Extension
	Copyright (c) 2017 Mahmoud Fayed <msfclipper@yahoo.com> 
*/

<filter> ismacosx()
#include <GL/glew.h>
#include <GLUT/glut.h>
</filter>

<filter> not ismacosx()
#include <GL/glew.h>
#include <GL/glut.h>
</filter>

</code>

<runcode>
aNumberTypes + "GLint"
aNumberTypes + "GLuint"
aNumberTypes + "unsigned"
aNumberTypes + "GLboolean"
aNumberTypes + "GLdouble"
aNumberTypes + "GLfloat"
aNumberTypes + "GLchar"
aNumberTypes + "GLsizeiptr"
aNumberTypes + "GLintptr"
aEnumTypes + "GLbitfield"
aEnumTypes + "GLenum"
aEnumTypes + "GLsizei"
</runcode>

<comment>
OpenGL 2.1 functions
From this reference : https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/
</comment>

<constant>
</constant>

void glAccum(GLenum op,GLfloat value)
void glActiveTexture(GLenum texture)
void glAlphaFunc(GLenum func,GLclampf ref)
GLboolean glAreTexturesResident(GLsizei n,const GLuint * textures,GLboolean * residences)
void glArrayElement(GLint i)
void glAttachShader(GLuint program,GLuint shader) 
void glBegin(GLenum mode)
void glBeginQuery(GLenum target,GLuint id)
void glBindAttribLocation(GLuint program,GLuint index,const GLchar *name)
void glBindBuffer(GLenum target,GLuint buffer)
void glBindTexture(GLenum target,GLuint texture)
void glBitmap(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte * bitmap)
void glBlendColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
void glBlendEquation(GLenum mode)
void glBlendEquationSeparate(GLenum modeRGB,GLenum modeAlpha) 
void glBlendFunc(GLenum sfactor,GLenum dfactor)
void glBlendFuncSeparate(GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
void glBufferData(GLenum target,GLsizeiptr size,const GLvoid * data,GLenum usage)
void glBufferSubData(GLenum target,GLintptr offset,GLsizeiptr size,const GLvoid * data)
void glCallList(GLuint list)
void glCallLists(GLsizei n,GLenum type,const GLvoid * lists)
void glClear(GLbitfield mask)
void glClearAccum(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
void glClearColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
void glClearDepth(GLclampd depth)
void glClearIndex(GLfloat c)
void glClearStencil(GLint s)
void glClientActiveTexture(GLenum texture)
void glClipPlane(GLenum plane,const GLdouble * equation)
void glColor3b(GLbyte red,GLbyte green,GLbyte blue)
void glColor3s(GLshort red,GLshort green,GLshort blue)
void glColor3i(GLint red,GLint green,GLint blue)
void glColor3f(GLfloat red,GLfloat green,GLfloat blue)
void glColor3d(GLdouble red,GLdouble green,GLdouble blue)
void glColor3ub(GLubyte red,GLubyte green,GLubyte blue)
void glColor3us(GLushort red,GLushort green,GLushort blue)
void glColor3ui(GLuint red,GLuint green,GLuint blue)
void glColor4b(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha)
void glColor4s(GLshort red,GLshort green,GLshort blue,GLshort alpha)
void glColor4i(GLint red,GLint green,GLint blue,GLint alpha)
void glColor4f(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
void glColor4d(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha)
void glColor4ub(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha)
void glColor4us(GLushort red,GLushort green,GLushort blue,GLushort alpha)
void glColor4ui(GLuint red,GLuint green,GLuint blue,GLuint alpha)
void glColor3bv(const GLbyte * v)
void glColor3sv(const GLshort * v)
void glColor3iv(const GLint * v)
void glColor3fv(const GLfloat * v)
void glColor3dv(const GLdouble * v)
void glColor3ubv(const GLubyte * v)
void glColor3usv(const GLushort * v) 
void glColor3uiv(const GLuint * v)
void glColor4bv(const GLbyte * v)
void glColor4sv(const GLshort * v)
void glColor4iv(const GLint * v)
void glColor4fv(const GLfloat * v)
void glColor4dv(const GLdouble * v)
void glColor4ubv(const GLubyte * v)
void glColor4usv(const GLushort * v)
void glColor4uiv(const GLuint * v)
void glColorMask(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
void glColorMaterial(GLenum face,GLenum mode)
void glColorPointer(GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
void glColorSubTable(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const GLvoid * data)
void glColorTable(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * data)
void glColorTableParameterfv(GLenum target,GLenum pname,const GLfloat * params)
void glColorTableParameteriv(GLenum target,GLenum pname,const GLint * params)
void glCompileShader(GLuint shader)
void glCompressedTexImage1D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
void glCompressedTexImage2D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
void glCompressedTexImage3D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
void glCompressedTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
void glCompressedTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
void glCompressedTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
void glConvolutionFilter1D(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * data) 
void glConvolutionFilter2D(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * data)
void glConvolutionParameterf(GLenum target,GLenum pname,GLfloat params) 
void glConvolutionParameteri(GLenum target,GLenum pname,GLint params)
void glConvolutionParameterfv(GLenum target,GLenum pname,const GLfloat * params)
void glConvolutionParameteriv(GLenum target,GLenum pname,const GLint * params)
void glCopyColorSubTable(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
void glCopyColorTable(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
void glCopyConvolutionFilter1D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width) 
void glCopyConvolutionFilter2D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height) 
void glCopyPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type)
void glCopyTexImage1D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
void glCopyTexImage2D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
void glCopyTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
void glCopyTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
void glCopyTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
GLuint glCreateProgram(void)
GLuint glCreateShader(GLenum shaderType)
void glCullFace(GLenum mode)
void glDeleteBuffers(GLsizei n,const GLuint * buffers)
void glDeleteLists(GLuint list,GLsizei range)
void glDeleteProgram(GLuint program)
void glDeleteQueries(GLsizei n,const GLuint * ids)
void glDeleteShader(GLuint shader)
void glDeleteTextures(GLsizei n,const GLuint * textures)
void glDepthFunc(GLenum func)
void glDepthMask(GLboolean flag)
void glDepthRange(GLclampd nearVal,GLclampd farVal) 
void glDetachShader(GLuint program,GLuint shader)
void glEnable(GLenum  cap)
void glEnableClientState(GLenum cap)
void glEnableVertexAttribArray(GLuint index)
void glDisableVertexAttribArray(GLuint index)
void glDrawArrays(GLenum mode,GLint first,GLsizei count)
void glDrawBuffer(GLenum mode)
void glDrawBuffers(GLsizei n,const GLenum *bufs)
void glDrawElements(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices)
void glDrawPixels(GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * data)
void glDrawRangeElements(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
void glEdgeFlag(GLboolean flag)
void glEdgeFlagPointer(GLsizei stride,const GLvoid * pointer)
void glEnd(void)
void glEndList( void) 
void glEndQuery(GLenum target)
void glEvalCoord1f(GLfloat u)
void glEvalCoord1d(GLdouble u)
void glEvalCoord2f(GLfloat u,GLfloat v)
void glEvalCoord2d(GLdouble u,GLdouble v) 
void glEvalMesh1(GLenum mode,GLint i1,GLint i2)
void glEvalPoint1(GLint i) 
void glEvalPoint2(GLint i,GLint j)
void glFeedbackBuffer(GLsizei size,GLenum type,GLfloat * buffer)
void glFinish(void)
void glFlush(void)
void glFogf(GLenum pname,GLfloat param)
void glFogi(GLenum pname,GLint param)
void glFogfv(GLenum pname,const GLfloat * params)
void glFogiv(GLenum pname,const GLint * params) 
void glFogCoordd(GLdouble coord)
void glFogCoordf(GLfloat coord)
void glFogCoorddv(GLdouble * coord)
void glFogCoordfv(GLfloat * coord)
void glFogCoordPointer(GLenum type,GLsizei stride,GLvoid * pointer)
void glFrontFace(GLenum mode)
void glFrustum(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble nearVal,GLdouble farVal)
void glGenBuffers(GLsizei n,GLuint * buffers)
GLuint glGenLists(GLsizei range)
void glGenQueries(GLsizei n,GLuint * ids)
void glGenTextures(GLsizei n,GLuint * textures)
void glGetBooleanv(GLenum pname,GLboolean * params)
void glGetDoublev(GLenum pname,GLdouble * params)
void glGetFloatv(GLenum pname,GLfloat * params)
void glGetIntegerv(GLenum pname,GLint * params)
void glGetActiveAttrib(GLuint program,GLuint index,GLsizei bufSize,GLsizei *length,GLint *size,GLenum *type,GLchar *name) 
void glGetActiveUniform(GLuint program,GLuint index,GLsizei bufSize,GLsizei *length,GLint *size,GLenum *type,GLchar *name)
void glGetAttachedShaders(GLuint program,GLsizei maxCount,GLsizei *count,GLuint *shaders)
GLint glGetAttribLocation(GLuint program,const GLchar *name)
void glGetBufferParameteriv(GLenum target,GLenum value,GLint * data)
void glGetBufferPointerv(GLenum target,GLenum pname,GLvoid ** params)
void glGetBufferSubData(GLenum target,GLintptr offset,GLsizeiptr size,GLvoid * data)
