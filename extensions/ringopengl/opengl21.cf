<code>

/* 
	OpenGL 2.1 Extension
	Copyright (c) 2017 Mahmoud Fayed <msfclipper@yahoo.com> 
*/

<filter> ismacosx()
#include <GL/glew.h>
#include <GLUT/glut.h>
</filter>

<filter> not ismacosx()
#include <GL/glew.h>
#include <GL/glut.h>
</filter>

</code>

<runcode>
aNumberTypes + "GLint"
aNumberTypes + "GLuint"
aNumberTypes + "unsigned"
aNumberTypes + "GLboolean"
aNumberTypes + "GLdouble"
aNumberTypes + "GLfloat"
aNumberTypes + "GLchar"
aNumberTypes + "GLsizeiptr"
aNumberTypes + "GLintptr"
aEnumTypes + "GLbitfield"
aEnumTypes + "GLenum"
aEnumTypes + "GLsizei"
</runcode>

<comment>
OpenGL 2.1 functions
From this reference : https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/
</comment>

<constant>
</constant>

void glAccum(GLenum op,GLfloat value)
void glActiveTexture(GLenum texture)
void glAlphaFunc(GLenum func,GLclampf ref)
GLboolean glAreTexturesResident(GLsizei n,const GLuint * textures,GLboolean * residences)
void glArrayElement(GLint i)
void glAttachShader(GLuint program,GLuint shader) 
void glBegin(GLenum mode)
void glBeginQuery(GLenum target,GLuint id)
void glBindAttribLocation(GLuint program,GLuint index,const GLchar *name)
void glBindBuffer(GLenum target,GLuint buffer)
void glBindTexture(GLenum target,GLuint texture)
void glBitmap(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte * bitmap)
void glBlendColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
void glBlendEquation(GLenum mode)
void glBlendEquationSeparate(GLenum modeRGB,GLenum modeAlpha) 
void glBlendFunc(GLenum sfactor,GLenum dfactor)
void glBlendFuncSeparate(GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
void glBufferData(GLenum target,GLsizeiptr size,const GLvoid * data,GLenum usage)
void glBufferSubData(GLenum target,GLintptr offset,GLsizeiptr size,const GLvoid * data)
void glCallList(GLuint list)
void glCallLists(GLsizei n,GLenum type,const GLvoid * lists)
void glClear(GLbitfield mask)
void glClearAccum(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
void glClearColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
void glClearDepth(GLclampd depth)
void glClearIndex(GLfloat c)
void glClearStencil(GLint s)
void glClientActiveTexture(GLenum texture)
void glClipPlane(GLenum plane,const GLdouble * equation)
void glColor3b(GLbyte red,GLbyte green,GLbyte blue)
void glColor3s(GLshort red,GLshort green,GLshort blue)
void glColor3i(GLint red,GLint green,GLint blue)
void glColor3f(GLfloat red,GLfloat green,GLfloat blue)
void glColor3d(GLdouble red,GLdouble green,GLdouble blue)
void glColor3ub(GLubyte red,GLubyte green,GLubyte blue)
void glColor3us(GLushort red,GLushort green,GLushort blue)
void glColor3ui(GLuint red,GLuint green,GLuint blue)
void glColor4b(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha)
void glColor4s(GLshort red,GLshort green,GLshort blue,GLshort alpha)
void glColor4i(GLint red,GLint green,GLint blue,GLint alpha)
void glColor4f(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
void glColor4d(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha)
void glColor4ub(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha)
void glColor4us(GLushort red,GLushort green,GLushort blue,GLushort alpha)
void glColor4ui(GLuint red,GLuint green,GLuint blue,GLuint alpha)
void glColor3bv(const GLbyte * v)
void glColor3sv(const GLshort * v)
void glColor3iv(const GLint * v)
void glColor3fv(const GLfloat * v)
void glColor3dv(const GLdouble * v)
void glColor3ubv(const GLubyte * v)
void glColor3usv(const GLushort * v) 
void glColor3uiv(const GLuint * v)
void glColor4bv(const GLbyte * v)
void glColor4sv(const GLshort * v)
void glColor4iv(const GLint * v)
void glColor4fv(const GLfloat * v)
void glColor4dv(const GLdouble * v)
void glColor4ubv(const GLubyte * v)
