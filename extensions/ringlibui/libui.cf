<code>
/* Copyright (c) 2020 Mahmoud Fayed <msfclipper@yahoo.com> */

#include <ui.h>
<filter> iswindows()
#include <windows.h>
#include <ui_windows.h>
</filter>

</code>

<constant>
uiPi
uiForEachContinue
uiForEachStop
uiWindowResizeEdgeLeft
uiWindowResizeEdgeTop
uiWindowResizeEdgeRight
uiWindowResizeEdgeBottom
uiWindowResizeEdgeTopLeft
uiWindowResizeEdgeTopRight
uiWindowResizeEdgeBottomLeft
uiWindowResizeEdgeBottomRight
uiDrawBrushTypeSolid
uiDrawBrushTypeLinearGradient
uiDrawBrushTypeRadialGradient
uiDrawBrushTypeImage
</constant>

<struct>
uiInitOptions
uiControl { Signature, OSSignature, TypeSignature }
uiAreaHandler
uiAreaDrawParams {AreaWidth,AreaHeight, ClipX,ClipY,ClipWidth,ClipHeight}
</struct>

<runcode>
aNumberTypes + "size_t"

aEnumTypes + "uiForEach"
aEnumTypes + "uiTextWeight"
aEnumTypes + "uiWindowResizeEdge"
aEnumTypes + "uiDrawBrushType"
</runcode>

const char *uiInit(uiInitOptions *options)

void uiUninit(void)
void uiFreeInitError(const char *err)

void uiMain(void)
void uiMainSteps(void)
int uiMainStep(int wait)
void uiQuit(void)

void uiControlDestroy(uiControl *)
uiControl *uiControlParent(uiControl *)
void uiControlSetParent(uiControl *, uiControl *)
int uiControlToplevel(uiControl *)
int uiControlVisible(uiControl *)
void uiControlShow(uiControl *)
void uiControlHide(uiControl *)
int uiControlEnabled(uiControl *)
void uiControlEnable(uiControl *)
void uiControlDisable(uiControl *)

uiControl *uiAllocControl(size_t n, uint32_t OSsig, uint32_t typesig, const char *typenamestr)
void uiFreeControl(uiControl *)
void uiControlVerifySetParent(uiControl *, uiControl *)
int uiControlEnabledToUser(uiControl *)
void uiUserBugCannotSetParentOnToplevel(const char *type)

char *uiWindowTitle(uiWindow *w)
void uiWindowSetTitle(uiWindow *w, const char *title)
void uiWindowContentSize(uiWindow *w, int *width, int *height)
void uiWindowSetContentSize(uiWindow *w, int width, int height)
int uiWindowFullscreen(uiWindow *w)
void uiWindowSetFullscreen(uiWindow *w, int fullscreen)
int uiWindowBorderless(uiWindow *w)
void uiWindowSetBorderless(uiWindow *w, int borderless)
void uiWindowSetChild(uiWindow *w, uiControl *child)
int uiWindowMargined(uiWindow *w)
void uiWindowSetMargined(uiWindow *w, int margined)
uiWindow *uiNewWindow(const char *title, int width, int height, int hasMenubar)

char *uiButtonText(uiButton *b)
void uiButtonSetText(uiButton *b, const char *text)
uiButton *uiNewButton(const char *text)

void uiBoxAppend(uiBox *b, uiControl *child, int stretchy)
void uiBoxDelete(uiBox *b, int index)
int uiBoxPadded(uiBox *b)
void uiBoxSetPadded(uiBox *b, int padded)
uiBox *uiNewHorizontalBox(void)
uiBox *uiNewVerticalBox(void)

char *uiCheckboxText(uiCheckbox *c)
void uiCheckboxSetText(uiCheckbox *c, const char *text)
int uiCheckboxChecked(uiCheckbox *c)
void uiCheckboxSetChecked(uiCheckbox *c, int checked)
uiCheckbox *uiNewCheckbox(const char *text)

char *uiEntryText(uiEntry *e)
void uiEntrySetText(uiEntry *e, const char *text)
int uiEntryReadOnly(uiEntry *e)
void uiEntrySetReadOnly(uiEntry *e, int readonly)
uiEntry *uiNewEntry(void)
uiEntry *uiNewPasswordEntry(void)
uiEntry *uiNewSearchEntry(void)

char *uiLabelText(uiLabel *l)
void uiLabelSetText(uiLabel *l, const char *text)
uiLabel *uiNewLabel(const char *text)

void uiTabAppend(uiTab *t, const char *name, uiControl *c)
void uiTabInsertAt(uiTab *t, const char *name, int before, uiControl *c)
void uiTabDelete(uiTab *t, int index)
int uiTabNumPages(uiTab *t)
int uiTabMargined(uiTab *t, int page)
void uiTabSetMargined(uiTab *t, int page, int margined)
uiTab *uiNewTab(void)

char *uiGroupTitle(uiGroup *g)
void uiGroupSetTitle(uiGroup *g, const char *title)
void uiGroupSetChild(uiGroup *g, uiControl *c)
int uiGroupMargined(uiGroup *g)
void uiGroupSetMargined(uiGroup *g, int margined)
uiGroup *uiNewGroup(const char *title)

int uiSpinboxValue(uiSpinbox *s)
void uiSpinboxSetValue(uiSpinbox *s, int value)
uiSpinbox *uiNewSpinbox(int min, int max)

int uiSliderValue(uiSlider *s)
void uiSliderSetValue(uiSlider *s, int value)
uiSlider *uiNewSlider(int min, int max)

int uiProgressBarValue(uiProgressBar *p)
void uiProgressBarSetValue(uiProgressBar *p, int n)
uiProgressBar *uiNewProgressBar(void)

uiSeparator *uiNewHorizontalSeparator(void)
uiSeparator *uiNewVerticalSeparator(void)

void uiComboboxAppend(uiCombobox *c, const char *text)
int uiComboboxSelected(uiCombobox *c)
void uiComboboxSetSelected(uiCombobox *c, int n)
uiCombobox *uiNewCombobox(void)

void uiEditableComboboxAppend(uiEditableCombobox *c, const char *text)
char *uiEditableComboboxText(uiEditableCombobox *c)
void uiEditableComboboxSetText(uiEditableCombobox *c, const char *text)
uiEditableCombobox *uiNewEditableCombobox(void)

void uiRadioButtonsAppend(uiRadioButtons *r, const char *text)
int uiRadioButtonsSelected(uiRadioButtons *r)
void uiRadioButtonsSetSelected(uiRadioButtons *r, int n)
uiRadioButtons *uiNewRadioButtons(void)

void uiDateTimePickerTime(uiDateTimePicker *d, struct tm *time)
void uiDateTimePickerSetTime(uiDateTimePicker *d, const struct tm *time)
uiDateTimePicker *uiNewDateTimePicker(void)
uiDateTimePicker *uiNewDatePicker(void)
uiDateTimePicker *uiNewTimePicker(void)

char *uiMultilineEntryText(uiMultilineEntry *e)
void uiMultilineEntrySetText(uiMultilineEntry *e, const char *text)
void uiMultilineEntryAppend(uiMultilineEntry *e, const char *text)
int uiMultilineEntryReadOnly(uiMultilineEntry *e)
void uiMultilineEntrySetReadOnly(uiMultilineEntry *e, int readonly)
uiMultilineEntry *uiNewMultilineEntry(void)
uiMultilineEntry *uiNewNonWrappingMultilineEntry(void)

void uiMenuItemEnable(uiMenuItem *m)
void uiMenuItemDisable(uiMenuItem *m)
int uiMenuItemChecked(uiMenuItem *m)
void uiMenuItemSetChecked(uiMenuItem *m, int checked)

uiMenuItem *uiMenuAppendItem(uiMenu *m, const char *name)
uiMenuItem *uiMenuAppendCheckItem(uiMenu *m, const char *name)
uiMenuItem *uiMenuAppendQuitItem(uiMenu *m)
uiMenuItem *uiMenuAppendPreferencesItem(uiMenu *m)
uiMenuItem *uiMenuAppendAboutItem(uiMenu *m)
void uiMenuAppendSeparator(uiMenu *m)
uiMenu *uiNewMenu(const char *name)

char *uiOpenFile(uiWindow *parent)
char *uiSaveFile(uiWindow *parent)
void uiMsgBox(uiWindow *parent, const char *title, const char *description)
void uiMsgBoxError(uiWindow *parent, const char *title, const char *description)

void uiAreaQueueRedrawAll(uiArea *a)
void uiAreaScrollTo(uiArea *a, double x, double y, double width, double height)
void uiAreaBeginUserWindowMove(uiArea *a)
void uiAreaBeginUserWindowResize(uiArea *a, uiWindowResizeEdge edge)
uiArea *uiNewArea(uiAreaHandler *ah)
uiArea *uiNewScrollingArea(uiAreaHandler *ah, int width, int height)

uiDrawPath *uiDrawNewPath(uiDrawFillMode fillMode)
void uiDrawFreePath(uiDrawPath *p)

void uiDrawPathNewFigure(uiDrawPath *p, double x, double y)
void uiDrawPathNewFigureWithArc(uiDrawPath *p, double xCenter, double yCenter, double radius, double startAngle, double sweep, int negative)
void uiDrawPathLineTo(uiDrawPath *p, double x, double y)
void uiDrawPathArcTo(uiDrawPath *p, double xCenter, double yCenter, double radius, double startAngle, double sweep, int negative)
void uiDrawPathBezierTo(uiDrawPath *p, double c1x, double c1y, double c2x, double c2y, double endX, double endY)
void uiDrawPathCloseFigure(uiDrawPath *p)

void uiDrawPathAddRectangle(uiDrawPath *p, double x, double y, double width, double height)
void uiDrawPathEnd(uiDrawPath *p)
void uiDrawStroke(uiDrawContext *c, uiDrawPath *path, uiDrawBrush *b, uiDrawStrokeParams *p)
void uiDrawFill(uiDrawContext *c, uiDrawPath *path, uiDrawBrush *b)

void uiDrawMatrixSetIdentity(uiDrawMatrix *m)
void uiDrawMatrixTranslate(uiDrawMatrix *m, double x, double y)
void uiDrawMatrixScale(uiDrawMatrix *m, double xCenter, double yCenter, double x, double y)
void uiDrawMatrixRotate(uiDrawMatrix *m, double x, double y, double amount)
void uiDrawMatrixSkew(uiDrawMatrix *m, double x, double y, double xamount, double yamount)
void uiDrawMatrixMultiply(uiDrawMatrix *dest, uiDrawMatrix *src)
int uiDrawMatrixInvertible(uiDrawMatrix *m)
int uiDrawMatrixInvert(uiDrawMatrix *m)
void uiDrawMatrixTransformPoint(uiDrawMatrix *m, double *x, double *y)
void uiDrawMatrixTransformSize(uiDrawMatrix *m, double *x, double *y)
void uiDrawTransform(uiDrawContext *c, uiDrawMatrix *m)
void uiDrawClip(uiDrawContext *c, uiDrawPath *path)
void uiDrawSave(uiDrawContext *c)
void uiDrawRestore(uiDrawContext *c)

uiAttributeType uiAttributeGetType(const uiAttribute *a)
uiAttribute *uiNewFamilyAttribute(const char *family)
const char *uiAttributeFamily(const uiAttribute *a)
uiAttribute *uiNewSizeAttribute(double size)
double uiAttributeSize(const uiAttribute *a)

uiAttribute *uiNewStretchAttribute(uiTextStretch stretch)
uiTextStretch uiAttributeStretch(const uiAttribute *a)
uiAttribute *uiNewColorAttribute(double r, double g, double b, double a)
void uiAttributeColor(const uiAttribute *a, double *r, double *g, double *b, double *alpha)
uiAttribute *uiNewBackgroundAttribute(double r, double g, double b, double a)

uiAttribute *uiNewUnderlineAttribute(uiUnderline u)
uiUnderline uiAttributeUnderline(const uiAttribute *a)

uiAttribute *uiNewUnderlineColorAttribute(uiUnderlineColor u, double r, double g, double b, double a)
void uiAttributeUnderlineColor(const uiAttribute *a, uiUnderlineColor *u, double *r, double *g, double *b, double *alpha)
uiOpenTypeFeatures *uiNewOpenTypeFeatures(void)
void uiFreeOpenTypeFeatures(uiOpenTypeFeatures *otf)
uiOpenTypeFeatures *uiOpenTypeFeaturesClone(const uiOpenTypeFeatures *otf)
void uiOpenTypeFeaturesAdd(uiOpenTypeFeatures *otf, char a, char b, char c, char d, uint32_t value)
void uiOpenTypeFeaturesRemove(uiOpenTypeFeatures *otf, char a, char b, char c, char d)
int uiOpenTypeFeaturesGet(const uiOpenTypeFeatures *otf, char a, char b, char c, char d, uint32_t *value)
void uiOpenTypeFeaturesForEach(const uiOpenTypeFeatures *otf, uiOpenTypeFeaturesForEachFunc f, void *data)
uiAttribute *uiNewFeaturesAttribute(const uiOpenTypeFeatures *otf)
const uiOpenTypeFeatures *uiAttributeFeatures(const uiAttribute *a)
uiAttributedString *uiNewAttributedString(const char *initialString)
void uiFreeAttributedString(uiAttributedString *s)
const char *uiAttributedStringString(const uiAttributedString *s)
size_t uiAttributedStringLen(const uiAttributedString *s)
void uiAttributedStringAppendUnattributed(uiAttributedString *s, const char *str)
void uiAttributedStringInsertAtUnattributed(uiAttributedString *s, const char *str, size_t at)
void uiAttributedStringDelete(uiAttributedString *s, size_t start, size_t end)
void uiAttributedStringSetAttribute(uiAttributedString *s, uiAttribute *a, size_t start, size_t end)
void uiAttributedStringForEachAttribute(const uiAttributedString *s, uiAttributedStringForEachAttributeFunc f, void *data)
size_t uiAttributedStringNumGraphemes(uiAttributedString *s)
size_t uiAttributedStringByteIndexToGrapheme(uiAttributedString *s, size_t pos)
size_t uiAttributedStringGraphemeToByteIndex(uiAttributedString *s, size_t pos)


uiDrawTextLayout *uiDrawNewTextLayout(uiDrawTextLayoutParams *params)
void uiDrawFreeTextLayout(uiDrawTextLayout *tl)
void uiDrawText(uiDrawContext *c, uiDrawTextLayout *tl, double x, double y)
void uiDrawTextLayoutExtents(uiDrawTextLayout *tl, double *width, double *height)

void uiFontButtonFont(uiFontButton *b, uiFontDescriptor *desc)
uiFontButton *uiNewFontButton(void)
void uiFreeFontButtonFont(uiFontDescriptor *desc)

void uiColorButtonColor(uiColorButton *b, double *r, double *g, double *bl, double *a)
void uiColorButtonSetColor(uiColorButton *b, double r, double g, double bl, double a)
uiColorButton *uiNewColorButton(void)

void uiFormAppend(uiForm *f, const char *label, uiControl *c, int stretchy)
void uiFormDelete(uiForm *f, int index)
int uiFormPadded(uiForm *f)
void uiFormSetPadded(uiForm *f, int padded)
uiForm *uiNewForm(void)

void uiGridAppend(uiGrid *g, uiControl *c, int left, int top, int xspan, int yspan, int hexpand, uiAlign halign, int vexpand, uiAlign valign)
void uiGridInsertAt(uiGrid *g, uiControl *c, uiControl *existing, uiAt at, int xspan, int yspan, int hexpand, uiAlign halign, int vexpand, uiAlign valign)
int uiGridPadded(uiGrid *g)
void uiGridSetPadded(uiGrid *g, int padded)
uiGrid *uiNewGrid(void)

uiTableValueType uiTableValueGetType(const uiTableValue *v)
uiTableValue *uiNewTableValueString(const char *str)
const char *uiTableValueString(const uiTableValue *v)
uiTableValue *uiNewTableValueImage(uiImage *img)
uiImage *uiTableValueImage(const uiTableValue *v)
uiTableValue *uiNewTableValueInt(int i)
int uiTableValueInt(const uiTableValue *v)
uiTableValue *uiNewTableValueColor(double r, double g, double b, double a)
void uiTableValueColor(const uiTableValue *v, double *r, double *g, double *b, double *a)

uiImage *uiNewImage(double width, double height)
void uiFreeImage(uiImage *i)
void uiImageAppend(uiImage *i, void *pixels, int pixelWidth, int pixelHeight, int byteStride)

void uiFreeTableValue(uiTableValue *v)

uiTableModel *uiNewTableModel(uiTableModelHandler *mh)
void uiFreeTableModel(uiTableModel *m)
void uiTableModelRowInserted(uiTableModel *m, int newIndex)
void uiTableModelRowChanged(uiTableModel *m, int index)
void uiTableModelRowDeleted(uiTableModel *m, int oldIndex)

uiAttribute *uiNewWeightAttribute(uiTextWeight weight)
uiTextWeight uiAttributeWeight(const uiAttribute *a)
uiAttribute *uiNewItalicAttribute(uiTextItalic italic)
uiTextItalic uiAttributeItalic(const uiAttribute *a)

void uiFreeAttribute(uiAttribute *a)

void uiTableAppendTextColumn(uiTable *t,const char *name,int textModelColumn,int textEditableModelColumn,uiTableTextColumnOptionalParams *textParams)
void uiTableAppendImageColumn(uiTable *t,const char *name,int imageModelColumn)
void uiTableAppendImageTextColumn(uiTable *t,const char *name,int imageModelColumn,int textModelColumn,int textEditableModelColumn,uiTableTextColumnOptionalParams *textParams)
void uiTableAppendCheckboxColumn(uiTable *t,const char *name,int checkboxModelColumn,int checkboxEditableModelColumn)
void uiTableAppendCheckboxTextColumn(uiTable *t,const char *name,int checkboxModelColumn,int checkboxEditableModelColumn,int textModelColumn,int textEditableModelColumn,uiTableTextColumnOptionalParams *textParams)
void uiTableAppendProgressBarColumn(uiTable *t,const char *name,int progressModelColumn)
void uiTableAppendButtonColumn(uiTable *t,const char *name,int buttonModelColumn,int buttonClickableModelColumn)
uiTable *uiNewTable(uiTableParams *params)

void uiAreaSetSize(uiArea *a, int width, int height)

uintptr_t uiControlHandle(uiControl *)

<comment>

void uiQueueMain(void (*f)(void *data), void *data)
void uiTimer(int milliseconds, int (*f)(void *data), void *data)
void uiOnShouldQuit(int (*f)(void *data), void *data)
void uiFreeText(char *text)

#define uiControl(this) ((uiControl *) (this))
#define uiWindow(this) ((uiWindow *) (this))
void uiWindowOnContentSizeChanged(uiWindow *w, void (*f)(uiWindow *, void *), void *data)
void uiWindowOnClosing(uiWindow *w, int (*f)(uiWindow *w, void *data), void *data)
#define uiButton(this) ((uiButton *) (this))
void uiButtonOnClicked(uiButton *b, void (*f)(uiButton *b, void *data), void *data)
#define uiBox(this) ((uiBox *) (this))
#define uiCheckbox(this) ((uiCheckbox *) (this))
void uiCheckboxOnToggled(uiCheckbox *c, void (*f)(uiCheckbox *c, void *data), void *data)
#define uiEntry(this) ((uiEntry *) (this))
void uiEntryOnChanged(uiEntry *e, void (*f)(uiEntry *e, void *data), void *data)
#define uiLabel(this) ((uiLabel *) (this))
#define uiTab(this) ((uiTab *) (this))
#define uiGroup(this) ((uiGroup *) (this))
#define uiSpinbox(this) ((uiSpinbox *) (this))
void uiSpinboxOnChanged(uiSpinbox *s, void (*f)(uiSpinbox *s, void *data), void *data)
#define uiSlider(this) ((uiSlider *) (this))
void uiSliderOnChanged(uiSlider *s, void (*f)(uiSlider *s, void *data), void *data)
#define uiProgressBar(this) ((uiProgressBar *) (this))
#define uiSeparator(this) ((uiSeparator *) (this))
#define uiCombobox(this) ((uiCombobox *) (this))
void uiComboboxOnSelected(uiCombobox *c, void (*f)(uiCombobox *c, void *data), void *data)
#define uiEditableCombobox(this) ((uiEditableCombobox *) (this))
void uiEditableComboboxOnChanged(uiEditableCombobox *c, void (*f)(uiEditableCombobox *c, void *data), void *data)
#define uiRadioButtons(this) ((uiRadioButtons *) (this))
void uiRadioButtonsOnSelected(uiRadioButtons *r, void (*f)(uiRadioButtons *, void *), void *data)
#define uiDateTimePicker(this) ((uiDateTimePicker *) (this))
void uiDateTimePickerOnChanged(uiDateTimePicker *d, void (*f)(uiDateTimePicker *, void *), void *data)
#define uiMultilineEntry(this) ((uiMultilineEntry *) (this))
void uiMultilineEntryOnChanged(uiMultilineEntry *e, void (*f)(uiMultilineEntry *e, void *data), void *data)
#define uiMenuItem(this) ((uiMenuItem *) (this))
void uiMenuItemOnClicked(uiMenuItem *m, void (*f)(uiMenuItem *sender, uiWindow *window, void *data), void *data)
#define uiMenu(this) ((uiMenu *) (this))
#define uiArea(this) ((uiArea *) (this))



_UI_ENUM(uiDrawLineCap) {
	uiDrawLineCapFlat,
	uiDrawLineCapRound,
	uiDrawLineCapSquare,
}

_UI_ENUM(uiDrawLineJoin) {
	uiDrawLineJoinMiter,
	uiDrawLineJoinRound,
	uiDrawLineJoinBevel,
}

#define uiDrawDefaultMiterLimit 10.0

_UI_ENUM(uiDrawFillMode) {
	uiDrawFillModeWinding,
	uiDrawFillModeAlternate,
}

struct uiDrawMatrix {
	double M11
	double M12
	double M21
	double M22
	double M31
	double M32
}

struct uiDrawBrush {
	uiDrawBrushType Type
	double R
	double G
	double B
	double A
	double X0
	double Y0
	double X1
	double Y1
	double OuterRadius
	uiDrawBrushGradientStop *Stops
	size_t NumStops
}

struct uiDrawBrushGradientStop {
	double Pos
	double R
	double G
	double B
	double A
}

struct uiDrawStrokeParams {
	uiDrawLineCap Cap
	uiDrawLineJoin Join
	double Thickness
	double MiterLimit
	double *Dashes
	size_t NumDashes
	double DashPhase
}

typedef struct uiAttribute uiAttribute

_UI_ENUM(uiAttributeType) {
	uiAttributeTypeFamily,
	uiAttributeTypeSize,
	uiAttributeTypeWeight,
	uiAttributeTypeItalic,
	uiAttributeTypeStretch,
	uiAttributeTypeColor,
	uiAttributeTypeBackground,
	uiAttributeTypeUnderline,
	uiAttributeTypeUnderlineColor,
	uiAttributeTypeFeatures,
}

_UI_ENUM(uiTextWeight) {
	uiTextWeightMinimum = 0,
	uiTextWeightThin = 100,
	uiTextWeightUltraLight = 200,
	uiTextWeightLight = 300,
	uiTextWeightBook = 350,
	uiTextWeightNormal = 400,
	uiTextWeightMedium = 500,
	uiTextWeightSemiBold = 600,
	uiTextWeightBold = 700,
	uiTextWeightUltraBold = 800,
	uiTextWeightHeavy = 900,
	uiTextWeightUltraHeavy = 950,
	uiTextWeightMaximum = 1000,
}

_UI_ENUM(uiTextItalic) {
	uiTextItalicNormal,
	uiTextItalicOblique,
	uiTextItalicItalic,
}

_UI_ENUM(uiTextStretch) {
	uiTextStretchUltraCondensed,
	uiTextStretchExtraCondensed,
	uiTextStretchCondensed,
	uiTextStretchSemiCondensed,
	uiTextStretchNormal,
	uiTextStretchSemiExpanded,
	uiTextStretchExpanded,
	uiTextStretchExtraExpanded,
	uiTextStretchUltraExpanded,
}

_UI_ENUM(uiUnderline) {
	uiUnderlineNone,
	uiUnderlineSingle,
	uiUnderlineDouble,
	uiUnderlineSuggestion,		// wavy or dotted underlines used for spelling/grammar checkers
}

_UI_ENUM(uiUnderlineColor) {
	uiUnderlineColorCustom,
	uiUnderlineColorSpelling,
	uiUnderlineColorGrammar,
	uiUnderlineColorAuxiliary,		// for instance, the color used by smart replacements on macOS or in Microsoft Office
}

typedef struct uiOpenTypeFeatures uiOpenTypeFeatures
typedef uiForEach (*uiOpenTypeFeaturesForEachFunc)(const uiOpenTypeFeatures *otf, char a, char b, char c, char d, uint32_t value, void *data)

typedef struct uiAttributedString uiAttributedString
typedef uiForEach (*uiAttributedStringForEachAttributeFunc)(const uiAttributedString *s, const uiAttribute *a, size_t start, size_t end, void *data)

typedef struct uiFontDescriptor uiFontDescriptor

struct uiFontDescriptor {
	char *Family
	double Size
	uiTextWeight Weight
	uiTextItalic Italic
	uiTextStretch Stretch
}

typedef struct uiDrawTextLayout uiDrawTextLayout

_UI_ENUM(uiDrawTextAlign) {
	uiDrawTextAlignLeft,
	uiDrawTextAlignCenter,
	uiDrawTextAlignRight,
}

typedef struct uiDrawTextLayoutParams uiDrawTextLayoutParams

struct uiDrawTextLayoutParams {
	uiAttributedString *String
	uiFontDescriptor *DefaultFont
	double Width
	uiDrawTextAlign Align
}

typedef struct uiFontButton uiFontButton
#define uiFontButton(this) ((uiFontButton *) (this))

void uiFontButtonOnChanged(uiFontButton *b, void (*f)(uiFontButton *, void *), void *data)

_UI_ENUM(uiModifiers) {
	uiModifierCtrl = 1 << 0,
	uiModifierAlt = 1 << 1,
	uiModifierShift = 1 << 2,
	uiModifierSuper = 1 << 3,
}

struct uiAreaMouseEvent {
	double X
	double Y
	double AreaWidth
	double AreaHeight
	int Down
	int Up
	int Count
	uiModifiers Modifiers
	uint64_t Held1To64
}

_UI_ENUM(uiExtKey) {
	uiExtKeyEscape = 1,
	uiExtKeyInsert,
	uiExtKeyDelete,
	uiExtKeyHome,
	uiExtKeyEnd,
	uiExtKeyPageUp,
	uiExtKeyPageDown,
	uiExtKeyUp,
	uiExtKeyDown,
	uiExtKeyLeft,
	uiExtKeyRight,
	uiExtKeyF1,
	uiExtKeyF2,
	uiExtKeyF3,
	uiExtKeyF4,
	uiExtKeyF5,
	uiExtKeyF6,
	uiExtKeyF7,
	uiExtKeyF8,
	uiExtKeyF9,
	uiExtKeyF10,
	uiExtKeyF11,
	uiExtKeyF12,
	uiExtKeyN0,
	uiExtKeyN1,
	uiExtKeyN2,
	uiExtKeyN3,
	uiExtKeyN4,
	uiExtKeyN5,
	uiExtKeyN6,
	uiExtKeyN7,
	uiExtKeyN8,
	uiExtKeyN9,
	uiExtKeyNDot,
	uiExtKeyNEnter,
	uiExtKeyNAdd,
	uiExtKeyNSubtract,
	uiExtKeyNMultiply,
	uiExtKeyNDivide,
}

struct uiAreaKeyEvent {
	char Key
	uiExtKey ExtKey
	uiModifiers Modifier
	uiModifiers Modifiers
	int Up
}

typedef struct uiColorButton uiColorButton
#define uiColorButton(this) ((uiColorButton *) (this))
void uiColorButtonOnChanged(uiColorButton *b, void (*f)(uiColorButton *, void *), void *data)

typedef struct uiForm uiForm
#define uiForm(this) ((uiForm *) (this))

_UI_ENUM(uiAlign) {
	uiAlignFill,
	uiAlignStart,
	uiAlignCenter,
	uiAlignEnd,
}

_UI_ENUM(uiAt) {
	uiAtLeading,
	uiAtTop,
	uiAtTrailing,
	uiAtBottom,
}

typedef struct uiGrid uiGrid
#define uiGrid(this) ((uiGrid *) (this))

typedef struct uiImage uiImage
typedef struct uiTableValue uiTableValue


_UI_ENUM(uiTableValueType) {
	uiTableValueTypeString,
	uiTableValueTypeImage,
	uiTableValueTypeInt,
	uiTableValueTypeColor,
}

typedef struct uiTableModel uiTableModel
typedef struct uiTableModelHandler uiTableModelHandler

struct uiTableModelHandler {
	int (*NumColumns)(uiTableModelHandler *, uiTableModel *)
	uiTableValueType (*ColumnType)(uiTableModelHandler *, uiTableModel *, int)
	int (*NumRows)(uiTableModelHandler *, uiTableModel *)
	uiTableValue *(*CellValue)(uiTableModelHandler *mh, uiTableModel *m, int row, int column)
	void (*SetCellValue)(uiTableModelHandler *, uiTableModel *, int, int, const uiTableValue *)
}


#define uiTableModelColumnNeverEditable (-1)
#define uiTableModelColumnAlwaysEditable (-2)

typedef struct uiTableTextColumnOptionalParams uiTableTextColumnOptionalParams
typedef struct uiTableParams uiTableParams

struct uiTableTextColumnOptionalParams {
	int ColorModelColumn
}

struct uiTableParams {
	uiTableModel *Model
	int RowBackgroundColorModelColumn
}

typedef struct uiTable uiTable
#define uiTable(this) ((uiTable *) (this))

</comment>