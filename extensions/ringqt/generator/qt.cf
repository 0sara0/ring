<nodllstartup>

<libinitfunc> ring_qt_start

<ignorecpointertype>

<code>
/* Copyright (c) 2013-2018 Mahmoud Fayed <msfclipper@yahoo.com> */
</code>

<loadfile> qt_headerfiles.cf
<loadfile> qt_startup.cf
<loadfile> qt_string.cf
<loadfile> qt_newmethodname.cf

<runcode>

aNumberTypes + "qreal"
aNumberTypes + "qint64"
aNumberTypes + "ushort"
aNumberTypes + "ulong"

aEnumTypes + "Qt::GestureType"
aEnumTypes + "Qt::GestureFlag"
aEnumTypes + "Qt::ShortcutContext"
aEnumTypes + "Qt::InputMethodQuery"
aEnumTypes + "Qt::WindowType"
aEnumTypes + "QWidget::RenderFlag"
aEnumTypes + "Qt::WidgetAttribute"
aEnumTypes + "QPalette::ColorRole"
aEnumTypes + "Qt::ContextMenuPolicy"
aEnumTypes + "Qt::FocusReason"
aEnumTypes + "Qt::FocusPolicy"
aEnumTypes + "Qt::InputMethodHint"
aEnumTypes + "Qt::LayoutDirection"
aEnumTypes + "QSizePolicy::Policy"
aEnumTypes + "Qt::WindowType"
aEnumTypes + "Qt::WindowModality"
aEnumTypes + "Qt::WindowState"
aEnumTypes + "Qt::AlignmentFlag"
aEnumTypes + "Qt::Alignment"
aEnumTypes + "Qt::TextFormat"
aEnumTypes + "Qt::TextInteractionFlag"
aEnumTypes + "Qt::AspectRatioMode"
aEnumTypes + "Qt::TransformationMode"
aEnumTypes + "Qt::CursorMoveStyle"
aEnumTypes + "QLineEdit::EchoMode"
aEnumTypes + "QTextDocument::FindFlag"
aEnumTypes + "QTextCursor::MoveOperation"
aEnumTypes + "QTextCursor::MoveMode"
aEnumTypes + "QTextEdit::LineWrapMode"
aEnumTypes + "QTextOption::WrapMode"
aEnumTypes + "QItemSelectionModel::SelectionFlag"
aEnumTypes + "Qt::SortOrder"
aEnumTypes + "QAbstractItemView::ScrollHint"
aEnumTypes + "QDir::Filter"
aEnumTypes + "Qt::DropAction"
aEnumTypes + "Qt::Orientation"
aEnumTypes + "Qt::CheckState"
aEnumTypes + "QTreeWidgetItem::ChildIndicatorPolicy"
aEnumTypes + "Qt::ItemFlag"
aEnumTypes + "Qt::MatchFlag"
aEnumTypes + "Qt::Corner"
aEnumTypes + "Qt::ToolBarArea"
aEnumTypes + "Qt::ToolButtonStyle"
aEnumTypes + "Qt::DockWidgetArea"
aEnumTypes + "QMainWindow::DockOption"
aEnumTypes + "QTabWidget::TabPosition"
aEnumTypes + "QTabWidget::TabShape"
aEnumTypes + "QDockWidget::DockWidgetFeature"
aEnumTypes + "Qt::TextElideMode"
aEnumTypes + "Qt::DockWidgetAreas"
aEnumTypes + "QFrame::Shadow"
aEnumTypes + "QFrame::Shape"
aEnumTypes + "Qt::ScrollBarPolicy"
aEnumTypes + "QAbstractItemView::DragDropMode"
aEnumTypes + "QAbstractItemView::ScrollMode"
aEnumTypes + "QAbstractItemView::EditTrigger"
aEnumTypes + "QAbstractItemView::SelectionBehavior"
aEnumTypes + "QAbstractItemView::SelectionMode"
aEnumTypes + "QProgressBar::Direction"
aEnumTypes + "QAbstractSlider::SliderAction"
aEnumTypes + "QSlider::TickPosition"
aEnumTypes + "QDateTimeEdit::Section"
aEnumTypes + "Qt::TimeSpec"
aEnumTypes + "QAbstractSpinBox::ButtonSymbols"
aEnumTypes + "QAbstractSpinBox::CorrectionMode"
aEnumTypes + "QWebPage::FindFlag"
aEnumTypes + "QWebPage::WebAction"
aEnumTypes + "QWebEnginePage::FindFlag"
aEnumTypes + "QWebEnginePage::WebAction"
aEnumTypes + "QPainter::RenderHint"
aEnumTypes + "QUrl::ComponentFormattingOption"
aEnumTypes + "QUrl::ParsingMode"
aEnumTypes + "QMediaPlaylist::PlaybackMode"
aEnumTypes + "QAction::ActionEvent"
aEnumTypes + "QAction::MenuRole"
aEnumTypes + "QAction::Priority"
aEnumTypes + "QKeySequence::StandardKey"
aEnumTypes + "QMessageBox::ButtonRole"
aEnumTypes + "QMessageBox::StandardButton"
aEnumTypes + "QFileDialog::DialogLabel"
aEnumTypes + "QFileDialog::AcceptMode"
aEnumTypes + "QFileDialog::FileMode"
aEnumTypes + "QFileDialog::Option"
aEnumTypes + "QFileDialog::ViewMode"
aEnumTypes + "Qt::ImageConversionFlag"
aEnumTypes + "Qt::FillRule"
aEnumTypes + "Qt::SizeMode"
aEnumTypes + "Qt::BGMode"
aEnumTypes + "Qt::ClipOperation"
aEnumTypes + "QPainter::CompositionMode"
aEnumTypes + "Qt::PenCapStyle"
aEnumTypes + "Qt::PenJoinStyle"
aEnumTypes + "Qt::PenStyle"
aEnumTypes + "QColor::Spec"
aEnumTypes + "QPrinter::Unit"
aEnumTypes + "QPrinter::ColorMode"
aEnumTypes + "QPrinter::DuplexMode"
aEnumTypes + "QPrinter::OutputFormat"
aEnumTypes + "QPageLayout::Unit"
aEnumTypes + "QPrinter::PageOrder"
aEnumTypes + "QPageLayout::Orientation"
aEnumTypes + "QPrinter::PaperSource"
aEnumTypes + "QPrinter::PrintRange"
aEnumTypes + "QFont::Capitalization"
aEnumTypes + "QFont::HintingPreference"
aEnumTypes + "QFont::SpacingType"
aEnumTypes + "QFont::Style"
aEnumTypes + "QFont::StyleHint"
aEnumTypes + "QFont::StyleStrategy"
aEnumTypes + "QWebSettings::FontFamily"
aEnumTypes + "QWebSettings::FontSize"
aEnumTypes + "QWebSettings::WebAttribute"
aEnumTypes + "QWebSettings::ThirdPartyCookiePolicy"
aEnumTypes + "QWebSettings::WebGraphic"
aEnumTypes + "Qt::BrushStyle"
aEnumTypes + "QAbstractSocket::BindFlag"
aEnumTypes + "QIODevice::OpenModeFlag"
aEnumTypes + "QIODevice::OpenMode"
aEnumTypes + "QAbstractSocket::NetworkLayerProtocol"
aEnumTypes + "QAbstractSocket::PauseMode"
aEnumTypes + "QAbstractSocket::SocketState"
aEnumTypes + "QAbstractSocket::SocketOption"
aEnumTypes + "QNetworkRequest::KnownHeaders"
aEnumTypes + "QNetworkProxy::Capability"
aEnumTypes + "QNetworkProxy::ProxyType"
aEnumTypes + "QHostInfo::HostInfoError"
aEnumTypes + "QFileDevice::Permission"
aEnumTypes + "QDir::SortFlag"
aEnumTypes + "QFontDialog::FontDialogOption"
aEnumTypes + "QTextCursor::SelectionType"
aEnumTypes + "QColorDialog::ColorDialogOption"
aEnumTypes + "QLCDNumber::Mode"
aEnumTypes + "QLCDNumber::SegmentStyle"
aEnumTypes + "QInputDialog::InputMode"
aEnumTypes + "QInputDialog::InputDialogOption"
aEnumTypes + "QTextDocument::Stacks"
aEnumTypes + "QTextDocument::FindFlag"
aEnumTypes + "QTextDocument::MetaInformation"
aEnumTypes + "Qt::InputMethodHints"
aEnumTypes + "Qt::WindowFlags"
aEnumTypes + "QEvent::Type"
aEnumTypes + "QPrinter::PrinterMode"
aEnumTypes + "Qt::ItemFlags"
aEnumTypes + "QSystemTrayIcon::MessageIcon"
aEnumTypes + "Qt::DateFormat"
aEnumTypes + "MonthNameType"
aEnumTypes + "QTextCodec::ConversionFlag"
aEnumTypes + "ConverterState"
aEnumTypes + "QSql::NumericalPrecisionPolicy"
aEnumTypes + "QVariant::Type"
aEnumTypes + "DbmsType"
aEnumTypes + "QSqlQuery::BatchExecutionMode"
aEnumTypes + "RequiredStatus"
aEnumTypes + "QSql::ParamType"
aEnumTypes + "QSqlError::ErrorType"
aEnumTypes + "QSqlField::RequiredStatus"
aEnumTypes + "Qt::CaseSensitivity"
aEnumTypes + "QNetworkRequest::Attribute"
aEnumTypes + "QNetworkRequest::KnownHeaders"
aEnumTypes + "QNetworkRequest::Priority"
aEnumTypes + "QNetworkRequest::KnownHeaders" 
aEnumTypes + "QNetworkRequest::Priority"
aEnumTypes + "QNetworkAccessManager::NetworkAccessibility"
aEnumTypes + "QNetworkReply::NetworkError"
aEnumTypes + "Qt::SizeMode"
aEnumTypes + "Qt::ImageConversionFlags"
aEnumTypes + "Qt::MaskMode"
aEnumTypes + "QImage::Format"
aEnumTypes + "QImage::InvertMode"
aEnumTypes + "Error"
aEnumTypes + "ReadElementTextBehaviour"
aEnumTypes + "TokenType"
aEnumTypes + "QXmlStreamReader::ReadElementTextBehaviour"
aEnumTypes + "QThread::Priority"
aEnumTypes + "QRegularExpression::MatchOption"
aEnumTypes + "QRegularExpression::MatchType"
aEnumTypes + "QRegularExpression::PatternOption"
aEnumTypes + "QRegularExpression::MatchOptions"
aEnumTypes + "QRegularExpression::PatternOptions"
aEnumTypes + "QJsonDocument::DataValidation"
aEnumTypes + "QJsonDocument::JsonFormat"
aEnumTypes + "QPlainTextEdit::LineWrapMode"
aEnumTypes + "QTextCharFormat::FontPropertiesInheritanceBehavior"
aEnumTypes + "QTextCharFormat::UnderlineStyle"
aEnumTypes + "QTextCharFormat::VerticalAlignment"
aEnumTypes + "QCamera::FrameRateRange"
aEnumTypes + "QCamera::CaptureMode"
aEnumTypes + "QCamera::CaptureModes"
aEnumTypes + "QCamera::Error"
aEnumTypes + "QCamera::LockChangeReason"
aEnumTypes + "QCamera::LockQCamera::Status"
aEnumTypes + "QCamera::LockType"
aEnumTypes + "QCamera::LockTypes"
aEnumTypes + "QCamera::Position"
aEnumTypes + "QCamera::State"
aEnumTypes + "QCamera::Status"
aEnumTypes + "QCameraImageCapture::CaptureDestination"
aEnumTypes + "QCameraImageCapture::CaptureDestinations"
aEnumTypes + "QCameraImageCapture::DriveMode"
aEnumTypes + "QCameraImageCapture::Error"
aEnumTypes + "QHeaderView::ResizeMode"
aEnumTypes + "QLayout::SizeConstraint"
aEnumTypes + "QGradient::CoordinateMode"
aEnumTypes + "QGradient::Spread"
aEnumTypes + "QGradient::Type"
aEnumTypes + "Qt::MatchFlags"
aEnumTypes + "QCompleter::CompletionMode"
aEnumTypes + "QCompleter::ModelSorting"
aEnumTypes + "QString::SplitBehavior"
aEnumTypes + "QProcess::ExitStatus"
aEnumTypes + "QProcess::InputChannelMode"
aEnumTypes + "QProcess::ProcessChannel"
aEnumTypes + "QProcess::ProcessChannelMode"
aEnumTypes + "QProcess::ProcessError"
aEnumTypes + "QProcess::ProcessState"
aEnumTypes + "QMdiArea::ViewMode"
aEnumTypes + "QMdiArea::WindowOrder"
aEnumTypes + "QMdiArea::AreaOption"
aEnumTypes + "QMdiSubWindow::SubWindowOption"
aEnumTypes + "Qt::CursorShape"
aEnumTypes + "QListView::LayoutMode"
aEnumTypes + "QListView::Movement"
aEnumTypes + "QListView::ResizeMode"
aEnumTypes + "QListView::ViewMode"
aEnumTypes + "QListView::Flow"
aEnumTypes + "QAxBase::PropertyBag"
aEnumTypes + "QToolButton::ToolButtonPopupMode"
aEnumTypes + "QMutex::RecursionMode"
aEnumTypes + "QBluetoothDeviceDiscoveryAgent::DiscoveryMethod"
aEnumTypes + "QBluetoothDeviceDiscoveryAgent::DiscoveryMethods"
aEnumTypes + "QBluetoothDeviceDiscoveryAgent::Error"
aEnumTypes + "QBluetoothDeviceDiscoveryAgent::InquiryType"
aEnumTypes + "QBluetoothDeviceInfo::CoreConfiguration"
aEnumTypes + "QBluetoothDeviceInfo::CoreConfigurations"
aEnumTypes + "QBluetoothDeviceInfo::DataCompleteness"
aEnumTypes + "QBluetoothDeviceInfo::MajorDeviceClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorAudioVideoClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorComputerClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorHealthClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorImagingClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorMiscellaneousClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorNetworkClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorPeripheralClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorPhoneClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorToyClass"
aEnumTypes + "QBluetoothDeviceInfo::MinorWearableClass"
aEnumTypes + "QBluetoothDeviceInfo::ServiceClass"
aEnumTypes + "QBluetoothDeviceInfo::ServiceClasses"
aEnumTypes + "QBluetoothLocalDevice::Error"
aEnumTypes + "QBluetoothLocalDevice::HostMode"
aEnumTypes + "QBluetoothLocalDevice::Pairing"
aEnumTypes + "QBluetoothServer::Error"
aEnumTypes + "QBluetoothServiceDiscoveryAgent::DiscoveryMode"
aEnumTypes + "QBluetoothServiceDiscoveryAgent::Error"
aEnumTypes + "QBluetoothServiceInfo::AttributeId"
aEnumTypes + "QBluetoothServiceInfo::Protocol"
aEnumTypes + "QBluetoothSocket::SocketError"
aEnumTypes + "QBluetoothSocket::SocketState"
aEnumTypes + "QBluetoothTransferReply::TransferError"
aEnumTypes + "QBluetoothTransferRequest::Attribute"
aEnumTypes + "QBluetoothUuid::CharacteristicType"
aEnumTypes + "QBluetoothUuid::DescriptorType"
aEnumTypes + "QBluetoothUuid::ProtocolUuid"
aEnumTypes + "QBluetoothUuid::ServiceClassUuid"
aEnumTypes + "QDockWidget::DockWidgetFeature"
aEnumTypes + "QDockWidget::DockWidgetFeatures"
aEnumTypes + "QRegion::RegionType"
aEnumTypes + "QEventLoop::ProcessEventsFlags"
aEnumTypes + "Qt::ApplicationAttribute"
aEnumTypes + "QCalendarWidget::HorizontalHeaderFormat"
aEnumTypes + "QCalendarWidget::VerticalHeaderFormat"
aEnumTypes + "QCalendarWidget::SelectionMode"
aEnumTypes + "QOpenGLFunctions::OpenGLFeature"
aEnumTypes + "QOpenGLFunctions::OpenGLFeatures"
aEnumTypes + "QOpenGLContext::OpenGLModuleType"
aEnumTypes + "QSurfaceFormat::ColorSpace"
aEnumTypes + "QSurfaceFormat::FormatOption"
aEnumTypes + "QSurfaceFormat::FormatOptions"
aEnumTypes + "QSurfaceFormat::OpenGLContextProfile"
aEnumTypes + "QSurfaceFormat::RenderableType"
aEnumTypes + "QSurfaceFormat::SwapBehavior"
aEnumTypes + "QOpenGLWidget::UpdateBehavior"
aEnumTypes + "QOpenGLTexture::BindingTarget"
aEnumTypes + "QOpenGLTexture::ComparisonFunction"
aEnumTypes + "QOpenGLTexture::ComparisonMode"
aEnumTypes + "QOpenGLTexture::CoordinateDirection"
aEnumTypes + "QOpenGLTexture::CubeMapFace"
aEnumTypes + "QOpenGLTexture::DepthStencilMode"
aEnumTypes + "QOpenGLTexture::Feature"
aEnumTypes + "QOpenGLTexture::Features"
aEnumTypes + "QOpenGLTexture::Filter"
aEnumTypes + "QOpenGLTexture::MipMapGeneration"
aEnumTypes + "QOpenGLTexture::PixelFormat"
aEnumTypes + "QOpenGLTexture::PixelType"
aEnumTypes + "QOpenGLTexture::SwizzleComponent"
aEnumTypes + "QOpenGLTexture::SwizzleValue"
aEnumTypes + "QOpenGLTexture::Target"
aEnumTypes + "QOpenGLTexture::TextureFormat"
aEnumTypes + "QOpenGLTexture::TextureUnitReset"
aEnumTypes + "QOpenGLTexture::WrapMode"
aEnumTypes + "QPaintDevice::PaintDeviceMetric"
aEnumTypes + "QOpenGLDebugLogger::LoggingMode"
aEnumTypes + "QOpenGLFramebufferObject::Attachment"
aEnumTypes + "QOpenGLBuffer::Access"
aEnumTypes + "QOpenGLBuffer::RangeAccessFlag"
aEnumTypes + "QOpenGLBuffer::RangeAccessFlags"
aEnumTypes + "QOpenGLBuffer::Type"
aEnumTypes + "QOpenGLBuffer::UsagePattern"
aEnumTypes + "QOpenGLShader::ShaderType"
aEnumTypes + "QOpenGLShader::ShaderTypeBit"
aEnumTypes + "QTabBar::ButtonPosition"
aEnumTypes + "QTabBar::SelectionBehavior"
aEnumTypes + "QTabBar::Shape"
aEnumTypes + "QFileDevice::FileError"
aEnumTypes + "QFileDevice::FileHandleFlag"
aEnumTypes + "QFileDevice::FileHandleFlags"
aEnumTypes + "QFileDevice::FileTime"
aEnumTypes + "QFileDevice::MemoryMapFlags"
aEnumTypes + "QFileDevice::Permission"
aEnumTypes + "QFileDevice::Permissions"
aEnumTypes + "QStandardPaths::LocateOption"
aEnumTypes + "QStandardPaths::LocateOptions"
aEnumTypes + "QStandardPaths::StandardLocation"
aEnumTypes + "QFile::FileHandleFlags"
aEnumTypes + "QFile::Permissions"
aEnumTypes + "QDir::Filter"
aEnumTypes + "QDir::Filters"
aEnumTypes + "QDir::SortFlag"
aEnumTypes + "QDir::SortFlags"
aEnumTypes + "QQuickWidget::ResizeMode"
aEnumTypes + "QQuickWidget::Status"
aEnumTypes + "Qt::DropActions"
aEnumTypes + "Qt::MouseButtons"
aEnumTypes + "Qt::KeyboardModifiers"
aEnumTypes + "QClipboard::Mode"
aEnumTypes + "QChar::Category"
aEnumTypes + "QChar::Decomposition"
aEnumTypes + "QChar::Direction"
aEnumTypes + "QChar::JoiningType"
aEnumTypes + "QChar::Script"
aEnumTypes + "QChar::SpecialCharacter"
aEnumTypes + "QChar::UnicodeVersion"
aEnumTypes + "QGeoPositionInfo::Attribute"
aEnumTypes + "QGeoCoordinate::CoordinateFormat"
aEnumTypes + "QGeoCoordinate::CoordinateType"
aEnumTypes + "QGeoPositionInfoSource::Error"
aEnumTypes + "QGeoPositionInfoSource::PositioningMethod"
aEnumTypes + "QGeoPositionInfoSource::PositioningMethods"
aEnumTypes + "QGeoShape::ShapeType"
aEnumTypes + "QGeoSatelliteInfo::Attribute"
aEnumTypes + "QGeoSatelliteInfo::SatelliteSystem"
aEnumTypes + "QNmeaPositionInfoSource::UpdateMode"

$aMallocClassesList + "QModelIndex"

</runcode>

<addfreefunctionsprototype>

<loadfile> qapp.cf
<loadfile> qdesktopservices.cf
<loadfile> qtest.cf
<loadfile> qobject.cf
<loadfile> qwidget.cf
<loadfile> qlabel.cf
<loadfile> qpushbutton.cf
<loadfile> qbitmap.cf
<loadfile> qpixmap.cf
<loadfile> qpixmap2.cf
<loadfile> qicon.cf
<loadfile> qsize.cf
<loadfile> qlineedit.cf
<loadfile> qvboxlayout.cf
<loadfile> qhboxlayout.cf
<loadfile> qtextedit.cf
<loadfile> qlistwidget.cf
<loadfile> qtreeview.cf
<loadfile> qdir.cf
<loadfile> qfilesystemmodel.cf
<loadfile> qtreewidget.cf
<loadfile> qtreewidgetitem.cf
<loadfile> qcombobox.cf
<loadfile> qmenubar.cf
<loadfile> qmenu.cf
<loadfile> qtoolbar.cf
<loadfile> qmainwindow.cf
<loadfile> qstatusbar.cf
<loadfile> qdockwidget.cf
<loadfile> qtabwidget.cf
<loadfile> qtablewidgetitem.cf
<loadfile> qframe.cf
<loadfile> qframe2.cf
<loadfile> qframe3.cf
<loadfile> qabstractscrollarea.cf
<loadfile> qabstractitemview.cf
<loadfile> qtableview.cf
<loadfile> qtablewidget.cf
<loadfile> qprogressbar.cf
<loadfile> qspinbox.cf
<loadfile> qabstractslider.cf
<loadfile> qslider.cf
<loadfile> qdateedit.cf
<loadfile> qdatetimeedit.cf
<loadfile> qabstractspinbox.cf
<loadfile> qdial.cf

<filter> (sysget("RINGQT_ANDROID") = "" and sysget("RINGQT_NOWEBKIT") = "")
<loadfile> qwebview.cf
</filter>

<loadfile> qurl.cf
<loadfile> qcheckbox.cf
<loadfile> qabstractbutton.cf
<loadfile> qradiobutton.cf
<loadfile> qbuttongroup.cf
<loadfile> qmediaplayer.cf
<loadfile> qmediaplaylist.cf
<loadfile> qvideowidget.cf
<loadfile> qaction.cf
<loadfile> qevent.cf
<loadfile> qmessagebox.cf
<loadfile> qtimer.cf
<loadfile> qfiledialog.cf
<loadfile> qpainter.cf
<loadfile> qpainter2.cf
<loadfile> qpicture.cf
<loadfile> qpen.cf
<loadfile> qcolor.cf
<loadfile> qprinter.cf
<loadfile> qfont.cf
<loadfile> qbrush.cf
<loadfile> qbytearray.cf
<loadfile> qiodevice.cf
<loadfile> qabstractsocket.cf
<loadfile> qnetworkproxy.cf
<loadfile> qtcpsocket.cf
<loadfile> qtcpserver.cf
<loadfile> qhostaddress.cf
<loadfile> qhostinfo.cf
<loadfile> qfileinfo.cf
<loadfile> qdirmodel.cf
<loadfile> qfontdialog.cf
<loadfile> qdialog.cf
<loadfile> qtextcursor.cf
<loadfile> qcolordialog.cf
<loadfile> qstringlist.cf
<loadfile> qkeysequence.cf
<loadfile> qlcdnumber.cf
<loadfile> qinputdialog.cf
<loadfile> qallevents.cf
<loadfile> qdesktopwidget.cf
<loadfile> qrect.cf
<loadfile> qtextdocument.cf
<loadfile> qtextblock.cf
<loadfile> qtime.cf
<loadfile> qlistwidgetitem.cf
<loadfile> qsystemtrayicon.cf
<loadfile> qdate.cf
<loadfile> qtextcodec.cf
<loadfile> qsqldatabase.cf
<loadfile> qsqldriver.cf
<loadfile> qsqlquery.cf
<loadfile> qsqlerror.cf
<loadfile> qsqlindex.cf
<loadfile> qsqlrecord.cf
<loadfile> qsqlfield.cf
<loadfile> qsqldrivercreatorbase.cf
<loadfile> qvariant.cf
<loadfile> qnetworkrequest.cf
<loadfile> qnetworkaccessmanager.cf
<loadfile> qnetworkreply.cf
<loadfile> qpainterpath.cf
<loadfile> qimage.cf
<loadfile> ringcodehighlighter.cf
<loadfile> qxmlstreamreader.cf
<loadfile> qxmlstreamwriter.cf
<loadfile> qxmlstreamnotationdeclaration.cf
<loadfile> qxmlstreamnamespacedeclaration.cf
<loadfile> qxmlstreamentitydeclaration.cf
<loadfile> qxmlstreamentityresolver.cf
<loadfile> qxmlstreamattributes.cf
<loadfile> qxmlstreamattribute.cf
<loadfile> qthread.cf
<loadfile> qthreadpool.cf
<loadfile> qregularexpression.cf
<loadfile> qregularexpressionmatch.cf
<loadfile> qregularexpressionmatchiterator.cf
<loadfile> qjsonarray.cf
<loadfile> qjsondocument.cf
<loadfile> qjsonobject.cf
<loadfile> qjsonparseerror.cf
<loadfile> qjsonvalue.cf
<loadfile> qplaintextedit.cf
<loadfile> codeeditor.cf
<loadfile> qgridlayout.cf
<loadfile> qtextcharformat.cf
<loadfile> qcameraviewfinder.cf
<loadfile> qgraphicsvideoitem.cf
<loadfile> qvideowidgetcontrol.cf
<loadfile> qcamera.cf
<loadfile> qcameraimagecapture.cf
<loadfile> qmediaobject.cf
<loadfile> qheaderview.cf
<loadfile> qfontmetrics.cf
<loadfile> qsplashscreen.cf
<loadfile> qboxlayout.cf
<loadfile> qlayout.cf
<loadfile> qlineargradient.cf
<loadfile> qgradient.cf
<loadfile> qpointf.cf
<loadfile> qpoint.cf

<comment>

//<class>
name: QModelIndex
para: void
//</class>

QModelIndex child(int row, int column)
int column(void)
QVariant data(int role )
Qt::ItemFlags flags(void)
qint64 internalId(void)
void *internalPointer(void)
bool isValid(void)
QAbstractItemModel *model(void)
QModelIndex parent(void)
int row(void)
QModelIndex sibling(int row, int column)

</comment>

<loadfile> qscrollarea.cf
<loadfile> qsplitter.cf
<loadfile> qcompleter.cf
<loadfile> qcompleter2.cf
<loadfile> qcompleter3.cf
<loadfile> qstring2.cf
<loadfile> qprocess.cf
<loadfile> qmdiarea.cf
<loadfile> qmdisubwindow.cf
<loadfile> qcursor.cf
<loadfile> qlistview.cf


<filter> (iswindows() and sysget("RINGQT_ANDROID") = "")
<loadfile> qaxobject.cf
<loadfile> qaxbase.cf
</filter>

<loadfile> quuid.cf
<loadfile> qtoolbutton.cf

<filter> (sysget("RINGQT_ANDROID") = "")
<loadfile> qserialport.cf
<loadfile> qserialportinfo.cf
</filter>

<loadfile> qstringref.cf
<loadfile> qmutex.cf
<loadfile> qmutexlocker.cf

<loadfile> qbuffer.cf
<loadfile> qbluetoothaddress.cf
<loadfile> qbluetoothdevicediscoveryagent.cf
<loadfile> qbluetoothdeviceinfo.cf
<loadfile> qbluetoothhostinfo.cf
<loadfile> qbluetoothlocaldevice.cf
<loadfile> qbluetoothserver.cf
<loadfile> qbluetoothservicediscoveryagent.cf
<loadfile> qbluetoothserviceinfo.cf
<loadfile> qbluetoothsocket.cf
<loadfile> qbluetoothtransfermanager.cf
<loadfile> qbluetoothtransferreply.cf
<loadfile> qbluetoothtransferrequest.cf
<loadfile> qbluetoothuuid.cf

<loadfile> qdatetime.cf
<loadfile> qscreen.cf
<loadfile> qwindow.cf
<loadfile> qguiapplication.cf
<loadfile> qcoreapplication.cf
<loadfile> qtextbrowser.cf
<loadfile> qregion.cf
<loadfile> qstackedwidget.cf
<loadfile> qcalenderwidget.cf


<filter> ((iswindows() or ismacosx()) and sysget("RINGQT_ANDROID") = "")

<loadfile> qopenglfunctions.cf
<loadfile> qopenglcontext.cf
<loadfile> qopenglfunctions_3_2_core.cf
<loadfile> qsurfaceformat.cf
<loadfile> qopenglwidget.cf
<loadfile> qopenglversionprofile.cf

</filter>

<loadfile> qvector2d.cf
<loadfile> qvector3d.cf
<loadfile> qvector4d.cf
<loadfile> qquaternion.cf
<loadfile> qmatrix4x4.cf

<filter> (iswindows() and sysget("RINGQT_ANDROID") = "")

<loadfile> qopenglpaintdevice.cf
<loadfile> qpaintdevice.cf
<loadfile> qopengltimerquery.cf
<loadfile> qopengldebuglogger.cf
<loadfile> qopenglframebufferobject.cf
<loadfile> qopenglvertexarrayobject.cf
<loadfile> qopenglbuffer.cf
<loadfile> qopenglshaderprogram.cf
<loadfile> qopenglshader.cf
<loadfile> qopengltexture.cf

</filter>

<loadfile> qtabbar.cf
<loadfile> qfile.cf
<loadfile> qfiledevice.cf
<loadfile> qstandardpaths.cf

<filter> (iswindows() or ismacosx()) 
<loadfile> qquickwidget.cf
<loadfile> qqmlerror.cf
</filter>


<filter> (sysget("RINGQT_ANDROID") = "" and sysget("RINGQT_NOWEBKIT") = "1")
<loadfile> qwebengineview.cf
</filter>

<loadfile> qscrollbar.cf
<loadfile> qdrag.cf
<loadfile> qmimedata.cf
<loadfile> qdropevent.cf
<loadfile> qdragmoveevent.cf
<loadfile> qdragenterevent.cf
<loadfile> qdragleaveevent.cf
<loadfile> qclipboard.cf
<loadfile> qchar.cf
<loadfile> qchildevent.cf

<loadfile> qgeopositioninfo.cf
<loadfile> qgeocoordinate.cf
<loadfile> qgeoaddress.cf
<loadfile> qgeoareamonitorinfo.cf
<loadfile> qgeoareamonitorsource.cf
<loadfile> qgeocircle.cf
<loadfile> qgeopositioninfosource.cf
<loadfile> qgeorectangle.cf
<loadfile> qgeoshape.cf
<loadfile> qgeosatelliteinfo.cf
<loadfile> qgeosatelliteinfosource.cf
<loadfile> qnmeapositioninfosource.cf

