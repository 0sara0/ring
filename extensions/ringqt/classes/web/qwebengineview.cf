<class>
name: QWebEngineView
para: QWidget *parent
parent: QWidget
codename: GWebEngineView
passvmpointer
</class>

bool hasSelection(void)
QWebEngineHistory *history(void)
void load(QUrl) # In RingQt use : void loadpage(QUrl) 
QWebEnginePage *page(void)
QAction *pageAction(QWebEnginePage::WebAction action)
QString selectedText(void)
void setContent(QByteArray,QString,QUrl)
void setHtml(QString,QUrl)
void setPage(QWebEnginePage *page)
void setUrl(QUrl)
void setZoomFactor(qreal factor)
QWebSettings *settings(void)
QString title(void)
void triggerPageAction(QWebEnginePage::WebAction action, bool checked)
QUrl url(void)
qreal zoomFactor(void)
void back(void)
void forward(void)
void reload(void)
void stop(void)

void setloadFinishedEvent(const char *)
void setloadProgressEvent(const char *)
void setloadStartedEvent(const char *)
void setselectionChangedEvent(const char *)
void settitleChangedEvent(const char *)
void seturlChangedEvent(const char *)

const char *getloadFinishedEvent(void)
const char *getloadProgressEvent(void)
const char *getloadStartedEvent(void)
const char *getselectionChangedEvent(void)
const char *gettitleChangedEvent(void)
const char *geturlChangedEvent(void)

<comment>
To support code based on old versions of Qt that provides QWebView
</comment>

<register>
void print(QPrinter *printer)
</register>

<code>
RING_FUNC(ring_QWebEngineView_print)
{
	QWebEngineView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWebEngineView *) RING_API_GETCPOINTER(1,"QWebEngineView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->page()->print((QPrinter *) RING_API_GETCPOINTER(2,"QPrinter"),[=](bool){});
}
</code>

<class>
name: QWebView
para: QWidget *parent
parent: QWebEngineView
codename: GWebEngineView
passvmpointer
</class>
