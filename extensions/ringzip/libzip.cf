<ignorecpointertype>

<code>
/*
**  Copyright (c) 2013-2017 Mahmoud Fayed <msfclipper@yahoo.com> 
*/

#include <zip.h>

#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <zip.c>

typedef struct zip_t ZIP_T ;

struct buffer_t {
    char *data;
    size_t size;
};

static size_t on_extract(void *arg, unsigned long long offset, const void *data,size_t size) {
    struct buffer_t *buf = (struct buffer_t *) arg;
    buf->data = realloc(buf->data, buf->size + size + 1);
    assert(NULL != buf->data);

    memcpy(&(buf->data[buf->size]), data, size);
    buf->size += size;
    buf->data[buf->size] = 0;

    return size;
}

void zip_extract_file(const char *cZIPFile,const char *cFile) {
    struct buffer_t buf = {0};

    struct zip_t *zip = zip_open(cZIPFile, 0, 'r');
    assert(zip != NULL);

    assert(0 == zip_entry_open(zip, cFile));
    assert(0 == zip_entry_extract(zip, on_extract, &buf));

    assert(0 == zip_entry_close(zip));
    free(buf.data);
    buf.data = NULL;
    buf.size = 0;

    zip_close(zip);
}



</code>

ZIP_T*zip_open(const char *, int, char)
void zip_close(ZIP_T*)
int zip_entry_open(ZIP_T*, const char *)
int zip_entry_write(ZIP_T*, const char *,int)
int zip_entry_close(ZIP_T*)
void zip_extract_file(const char *cZIPFile,const char *cFile)