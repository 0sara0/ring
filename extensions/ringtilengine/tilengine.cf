<ignorecpointertype>

<code>
/* Copyright (c) 2021 Mahmoud Fayed <msfclipper@yahoo.com> */

#include <tilengine.h>
</code>

<constant>
TILENGINE_VER_MAJ
TILENGINE_VER_MIN
TILENGINE_VER_REV
TILENGINE_HEADER_VERSION
FLAG_NONE
FLAG_FLIPX
FLAG_FLIPY
FLAG_ROTATE
FLAG_PRIORITY
FLAG_MASKED
BLEND_NONE
BLEND_MIX25
BLEND_MIX50
BLEND_MIX75
BLEND_ADD
BLEND_SUB
BLEND_MOD
BLEND_CUSTOM
MAX_BLEND
BLEND_MIX
TLN_OVERLAY_NONE
TLN_OVERLAY_SHADOWMASK
TLN_OVERLAY_APERTURE
TLN_OVERLAY_SCANLINES
TLN_OVERLAY_CUSTOM
TLN_MAX_OVERLAY
PLAYER1
PLAYER2
PLAYER3
PLAYER4
INPUT_NONE
INPUT_UP
INPUT_DOWN
INPUT_LEFT
INPUT_RIGHT
INPUT_BUTTON1
INPUT_BUTTON2
INPUT_BUTTON3
INPUT_BUTTON4
INPUT_BUTTON5
INPUT_BUTTON6
INPUT_START
INPUT_QUIT
INPUT_CRT
INPUT_P1
INPUT_P2
INPUT_P3
INPUT_P4
INPUT_A
INPUT_B
INPUT_C
INPUT_D
INPUT_E
INPUT_F
CWF_FULLSCREEN
CWF_VSYNC
CWF_S1
CWF_S2
CWF_S3
CWF_S4
CWF_S5
CWF_NEAREST	
TLN_ERR_OK
TLN_ERR_OUT_OF_MEMORY
TLN_ERR_IDX_LAYER
TLN_ERR_IDX_SPRITE
TLN_ERR_IDX_ANIMATION
TLN_ERR_IDX_PICTURE
TLN_ERR_REF_TILESET
TLN_ERR_REF_TILEMAP
TLN_ERR_REF_SPRITESET
TLN_ERR_REF_PALETTE
TLN_ERR_REF_SEQUENCE
TLN_ERR_REF_SEQPACK
TLN_ERR_REF_BITMAP
TLN_ERR_NULL_POINTER
TLN_ERR_FILE_NOT_FOUND
TLN_ERR_WRONG_FORMAT
TLN_ERR_WRONG_SIZE
TLN_ERR_UNSUPPORTED
TLN_ERR_REF_LIST
TLN_MAX_ERR
TLN_LOG_NONE
TLN_LOG_ERRORS
TLN_LOG_VERBOSE
</constant>

<struct>
TLN_Affine {angle,dx,dy,sx,sy}
Tile {value,index,flags}
TLN_SequenceFrame {index,delay}
TLN_ColorStrip {delay,first,count,dir}
TLN_SequenceInfo {num_frames}
TLN_SpriteData {x,y,w,h}
TLN_SpriteInfo {w,h}
TLN_TileInfo {index,flags,row,col,xoffset,yoffset,color,type,empty}
TLN_ObjectInfo {id,gid,flags,x,y,width,height,type,visible}
TLN_TileAttributes {type,priority}
TLN_PixelMap {dx,dy}
TLN_TileImage {id,type}
TLN_SpriteState {x,y,w,h,flags,index,enabled,collision}
</struct>

<runcode>
aNumberTypes + "size_t"
aNumberTypes + "char"
aNumberTypes + "int8_t"
aNumberTypes + "int16_t"
aNumberTypes + "int32_t"
aNumberTypes + "uint8_t"
aNumberTypes + "uint16_t"
aNumberTypes + "uint32_t"
aNumberTypes + "bool"
aEnumTypes + "TLN_TileFlags"
aEnumTypes + "TLN_Blend"
aEnumTypes + "TLN_Overlay"
aEnumTypes + "TLN_Player"
aEnumTypes + "TLN_Input"
aEnumTypes + "TLN_Error"
aEnumTypes + "TLN_LogLevel"
</runcode>

<comment>
Basic setup and management
</comment>

TLN_Engine TLN_Init(int hres, int vres, int numlayers, int numsprites, int numanimations)
void TLN_Deinit(void)
bool TLN_DeleteContext(TLN_Engine context)
bool TLN_SetContext(TLN_Engine context)
TLN_Engine TLN_GetContext(void)
int TLN_GetWidth(void)
int TLN_GetHeight(void)
uint32_t TLN_GetNumObjects(void)
uint32_t TLN_GetUsedMemory(void)
uint32_t TLN_GetVersion(void)
int TLN_GetNumLayers(void)
int TLN_GetNumSprites(void)
void TLN_SetBGColor(uint8_t r, uint8_t g, uint8_t b)
bool TLN_SetBGColorFromTilemap(TLN_Tilemap tilemap)
void TLN_DisableBGColor(void)
bool TLN_SetBGBitmap(TLN_Bitmap bitmap)
bool TLN_SetBGPalette(TLN_Palette palette)
void TLN_SetRasterCallback(TLN_VideoCallback)
void TLN_SetFrameCallback(TLN_VideoCallback)
void TLN_SetRenderTarget(uint8_t* data, int pitch)
void TLN_UpdateFrame(int frame)
void TLN_SetLoadPath(const char* path)
void TLN_SetCustomBlendFunction(TLN_BlendFunction)
void TLN_SetLogLevel(TLN_LogLevel log_level)
bool TLN_OpenResourcePack(const char* filename, const char* key)
void TLN_CloseResourcePack(void)

